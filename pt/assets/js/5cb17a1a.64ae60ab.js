"use strict";(self.webpackChunkais_project_github_io=self.webpackChunkais_project_github_io||[]).push([[348],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>k});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),p=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},d=function(e){var a=p(e.components);return n.createElement(s.Provider,{value:a},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(t),u=r,k=c["".concat(s,".").concat(u)]||c[u]||m[u]||o;return t?n.createElement(k,i(i({ref:a},d),{},{components:t})):n.createElement(k,i({ref:a},d))}));function k(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3746:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=t(7462),r=(t(7294),t(3905));const o={id:"rnsa",title:"RNSA",sidebar_label:"RNSA - Algoritmo de Sele\xe7\xe3o Negativa de Valor Real",sidebar_position:1,keywords:["Valor Real","classifica\xe7\xe3o","anomalias","not self","V-detector"]},i="RNSA (Algoritmo de Sele\xe7\xe3o Negativa de Valor Real)",l={unversionedId:"aisp-techniques/Negative Selection/rnsa",id:"aisp-techniques/Negative Selection/rnsa",title:"RNSA",description:"Construtor RNSA:",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/aisp-techniques/Negative Selection/RNSA.md",sourceDirName:"aisp-techniques/Negative Selection",slug:"/aisp-techniques/Negative Selection/rnsa",permalink:"/pt/docs/aisp-techniques/Negative Selection/rnsa",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"rnsa",title:"RNSA",sidebar_label:"RNSA - Algoritmo de Sele\xe7\xe3o Negativa de Valor Real",sidebar_position:1,keywords:["Valor Real","classifica\xe7\xe3o","anomalias","not self","V-detector"]},sidebar:"tutorialSidebar",previous:{title:"Sele\xe7\xe3o Negativa",permalink:"/pt/docs/aisp-techniques/Negative Selection/"},next:{title:"BNSA - Algoritmo de Sele\xe7\xe3o Negativa Bin\xe1ria",permalink:"/pt/docs/aisp-techniques/Negative Selection/bnsa"}},s={},p=[{value:"Construtor RNSA:",id:"construtor-rnsa",level:2},{value:"Fun\xe7\xe3o fit(...)",id:"fun\xe7\xe3o-fit",level:3},{value:"Fun\xe7\xe3o predict(...)",id:"fun\xe7\xe3o-predict",level:3},{value:"Fun\xe7\xe3o score(...):",id:"fun\xe7\xe3o-score",level:3},{value:"M\xe9todos privados",id:"m\xe9todos-privados",level:2},{value:"Fun\xe7\xe3o __checks_valid_detector(...):",id:"fun\xe7\xe3o-__checks_valid_detector",level:3},{value:"Fuction __compare_KnearestNeighbors_List(...):",id:"fuction-__compare_knearestneighbors_list",level:3},{value:"Fun\xe7\xe3o __compare_sample_to_detectors(...):",id:"fun\xe7\xe3o-__compare_sample_to_detectors",level:3},{value:"Fun\xe7\xe3o __detector_is_valid_to_Vdetector(...):",id:"fun\xe7\xe3o-__detector_is_valid_to_vdetector",level:3},{value:"Fun\xe7\xe3o __distance(...):",id:"fun\xe7\xe3o-__distance",level:3},{value:"Fun\xe7\xe3o __slice_index_list_by_class(...):",id:"fun\xe7\xe3o-__slice_index_list_by_class",level:3}],d={toc:p},c="wrapper";function m(e){let{components:a,...t}=e;return(0,r.kt)(c,(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"rnsa-algoritmo-de-sele\xe7\xe3o-negativa-de-valor-real"},"RNSA (Algoritmo de Sele\xe7\xe3o Negativa de Valor Real)"),(0,r.kt)("h2",{id:"construtor-rnsa"},"Construtor RNSA:"),(0,r.kt)("p",null,"A classe ",(0,r.kt)("inlineCode",{parentName:"p"},"RNSA")," tem a finalidade de classifica\xe7\xe3o e identifica\xe7\xe3o de anomalias atrav\xe9s do m\xe9todo self e not self . "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class RNSA(\n    self, \n    N: int = 100, \n    r: float = 0.05, \n    r_s: float = 0.0001, \n    k: int = 1, \n    metric: Literal['manhattan', 'minkowski', 'euclidean'] = 'euclidean', \n    max_discards: int = 100, \n    seed: int = None, \n    algorithm: Literal['default-NSA', 'V-detector'] ='default-NSA', \n    cell_bounds: bool = False\n)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Attributes:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"N")," (",(0,r.kt)("inlineCode",{parentName:"li"},"int"),"): Quantidade de detectores. Defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"100"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"r")," (",(0,r.kt)("inlineCode",{parentName:"li"},"float"),"): Raio do detector. Defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"0.05"),".",(0,r.kt)("admonition",{parentName:"li",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"\xc9 importante considerar que definir um raio muito baixo para o detector pode reduzir significativamente a taxa de detec\xe7\xe3o. Por outro lado, um raio muito grande pode inviabilizar a incorpora\xe7\xe3o do detector no espa\xe7o de busca, o que tamb\xe9m pode comprometer o desempenho da detec\xe7\xe3o. \xc9 fundamental encontrar um equil\xedbrio entre o tamanho do raio e a efici\xeancia da detec\xe7\xe3o para obter os melhores resultados poss\xedveis.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"k")," (",(0,r.kt)("inlineCode",{parentName:"p"},"int"),"): Quantidade de vizinhos pr\xf3ximos dos detectores gerados aleatoriamente para efetuar o c\xe1lculo da m\xe9dia da dist\xe2ncia. Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"metric")," (",(0,r.kt)("inlineCode",{parentName:"p"},"str"),"): Forma para se calcular a dist\xe2ncia entre o detector e a amostra: "),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"'euclidiana'")," \u279c O c\xe1lculo da dist\xe2ncia d\xe1-se pela express\xe3o:  \u221a( (X\u2081 \u2013 X\u2082)\xb2 + (Y\u2081 \u2013 Y\u2082)\xb2 + ... + (Yn \u2013 Yn)\xb2).")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"'minkowski'"),"  \u279c O c\xe1lculo da dist\xe2ncia d\xe1-se pela express\xe3o: ( |X\u2081 \u2013 Y\u2081|p + |X\u2082 \u2013 Y\u2082|p + ... + |Xn \u2013 Yn|p) \xb9/\u209a , Neste projeto ",(0,r.kt)("inlineCode",{parentName:"p"},"p == 2"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"'manhattan'"),"  \u279c O c\xe1lculo da dist\xe2ncia d\xe1-se pela express\xe3o:  ( |X\u2081 \u2013 X\u2082| + |Y\u2081 \u2013 Y\u2082| + ... + |Yn \u2013 Yn\u2082|)."),(0,r.kt)("p",{parentName:"li"},"Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"'euclidean'"),".")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"max_discards")," (",(0,r.kt)("inlineCode",{parentName:"p"},"int"),"): Este par\xe2metro indica o n\xfamero m\xe1ximo de descartes de detectores em sequ\xeancia, que tem como objetivo evitar um\nposs\xedvel loop infinito caso seja definido um raio que n\xe3o seja poss\xedvel gerar detectores do n\xe3o-pr\xf3prio.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"seed")," (",(0,r.kt)("inlineCode",{parentName:"p"},"int"),"): Semente para a gera\xe7\xe3o rand\xf4mica dos valores nos detectores. Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"None"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"algorithm")," (",(0,r.kt)("inlineCode",{parentName:"p"},"str"),"), Definir a vers\xe3o do algoritmo:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"'default-NSA'"),": Algoritmo padr\xe3o com raio fixo.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"'V-detector'"),': Este algoritmo \xe9 baseado no artigo "',(0,r.kt)("a",{parentName:"p",href:"https://doi.org/10.1007/978-3-540-24854-5_30"},"Real-Valued Negative Selection Algorithm with Variable-Sized Detectors"),'", de autoria de Ji, Z., Dasgupta, D. (2004), e utiliza um raio vari\xe1vel para a detec\xe7\xe3o de anomalias em espa\xe7os de caracter\xedsticas.  '),(0,r.kt)("p",{parentName:"li"},"Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"'default-NSA'"),".")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"r_s")," (",(0,r.kt)("inlineCode",{parentName:"p"},"float"),"): O valor de ",(0,r.kt)("inlineCode",{parentName:"p"},"r\u209b")," \xe9 o raio das amostras pr\xf3prias da matriz ",(0,r.kt)("inlineCode",{parentName:"p"},"X"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"cell_bounds")," (",(0,r.kt)("inlineCode",{parentName:"p"},"bool"),"):  Se definido como ",(0,r.kt)("inlineCode",{parentName:"p"},"True"),", esta op\xe7\xe3o limita a gera\xe7\xe3o dos detectores ao espa\xe7o do plano compreendido entre 0 e 1. Isso significa que qualquer detector cujo raio ultrapasse esse limite \xe9 descartado, e esta vari\xe1vel \xe9 usada exclusivamente no algoritmo ",(0,r.kt)("inlineCode",{parentName:"p"},"V-detector"),"."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Outras vari\xe1veis iniciadas:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"detectors")," (",(0,r.kt)("inlineCode",{parentName:"p"},"dict"),"): Esta vari\xe1vel armazena uma lista de detectores por classe.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"classes")," (",(0,r.kt)("inlineCode",{parentName:"p"},"npt.NDArray"),"): lista de classes de sa\xedda."))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fun\xe7\xe3o-fit"},"Fun\xe7\xe3o fit(...)"),(0,r.kt)("p",null,"A fun\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"fit(...)")," gera os detectores para os n\xe3o pr\xf3prios com rela\xe7\xe3o \xe0s amostras:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def fit(self, X: npt.NDArray, y: npt.NDArray):\n")),(0,r.kt)("p",null,"Nela \xe9 realizado o treinamento de acordo com ",(0,r.kt)("inlineCode",{parentName:"p"},"X")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"y"),", usando o m\xe9todo de sele\xe7\xe3o negativa(",(0,r.kt)("inlineCode",{parentName:"p"},"NegativeSelect"),")."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Os par\xe2metros de entrada s\xe3o:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"X"),": array com as caracter\xedsticas das amostras com ",(0,r.kt)("strong",{parentName:"li"},"N")," amostras (linhas) e ",(0,r.kt)("strong",{parentName:"li"},"N")," caracter\xedsticas  (colunas), normalizados para valores entre ","[0, 1]",". "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"y"),": array com as classes de sa\xeddas disposto em ",(0,r.kt)("strong",{parentName:"li"},"N")," amostras que s\xe3o relacionadas ao ",(0,r.kt)("inlineCode",{parentName:"li"},"X"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"verbose"),": booleano com valor default ",(0,r.kt)("inlineCode",{parentName:"li"},"True"),", determina se o feedback da gera\xe7\xe3o dos detectores ser\xe1 printado.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Retorna a inst\xe2ncia da classe.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fun\xe7\xe3o-predict"},"Fun\xe7\xe3o predict(...)"),(0,r.kt)("p",null,"A fun\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"predict(...)")," realiza a previs\xe3o das classes utilizando os detectores gerados:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def predict(self, X: npt.NDArray) -> npt.NDArray:\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"O par\xe2metro de entrada:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"X"),": array  com as caracter\xedsticas para a previs\xe3o, com ",(0,r.kt)("strong",{parentName:"li"},"N")," amostras (Linhas) e ",(0,r.kt)("strong",{parentName:"li"},"N")," colunas.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Retorna:")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"C"),": Um array de previs\xe3o com as classes de sa\xedda para as caracter\xedsticas informadas. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"None"),": se n\xe3o houver detectores.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fun\xe7\xe3o-score"},"Fun\xe7\xe3o score(...):"),(0,r.kt)("p",null,'A fun\xe7\xe3o "score(...)" calcula a precis\xe3o do modelo treinado por meio da realiza\xe7\xe3o de previs\xf5es e do c\xe1lculo da acur\xe1cia.'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def score(self, X: npt.NDArray, y: list) -> float:\n")),(0,r.kt)("p",null,"retorna a acur\xe1cia, do tipo ",(0,r.kt)("inlineCode",{parentName:"p"},"float"),"."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"m\xe9todos-privados"},"M\xe9todos privados"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fun\xe7\xe3o-__checks_valid_detector"},"Fun\xe7\xe3o __checks_valid_detector(...):"),(0,r.kt)("p",null,"A fun\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"def __checks_valid_detector(...)")," verifica se o detector possui raio ",(0,r.kt)("inlineCode",{parentName:"p"},"r")," v\xe1lido para o n\xe3o-pr\xf3prio da classe:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def __checks_valid_detector(self, X: npt.NDArray, vector_x: npt.NDArray, samplesIndexClass: npt.NDArray) -> bool:\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Os par\xe2metros de entrada s\xe3o:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"X"),": array com as caracter\xedsticas das amostras com ",(0,r.kt)("strong",{parentName:"p"},"N")," amostras (linhas) e ",(0,r.kt)("strong",{parentName:"p"},"N")," caracter\xedsticas  (colunas), normalizados para valores entre ","[0, 1]",".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"vector_x"),": Detector candidato gerado aleatoriamente. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"samplesIndexClass"),": Array com os indexs de uma classe."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Retorna:")," Verdadeiro (",(0,r.kt)("inlineCode",{parentName:"p"},"True"),") para os detectores que n\xe3o possuam amostras em seu interior ou falso (",(0,r.kt)("inlineCode",{parentName:"p"},"False"),") se possuir."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fuction-__compare_knearestneighbors_list"},"Fuction __compare_KnearestNeighbors_List(...):"),(0,r.kt)("p",null,"A fun\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"def __compare_KnearestNeighbors_List(...)")," compara a dist\xe2ncia dos k-vizinhos mais pr\xf3ximo, para isso se a dist\xe2ncia da nova amostra for menor, substitui ",(0,r.kt)("inlineCode",{parentName:"p"},"k-1")," e ordena em ordem crescente:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def __compare_KnearestNeighbors_List(self, knn: npt.NDArray, distance: float) -> npt.NDArray:\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Retorna:")," uma lista com as dist\xe2ncias dos k-vizinhos mais pr\xf3ximo."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fun\xe7\xe3o-__compare_sample_to_detectors"},"Fun\xe7\xe3o __compare_sample_to_detectors(...):"),(0,r.kt)("p",null,"Fun\xe7\xe3o para comparar uma amostra com os detectores, verificando se a amostra \xe9 pr\xf3pria."),(0,r.kt)("p",null,"Nesta fun\xe7\xe3o, quando possui ambiguidade de classes, retorna a classe que possuir a m\xe9dia de dist\xe2ncia maior entre os detectores."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Os par\xe2metros de entrada s\xe3o:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"line: vetor com N-caracter\xedsticas")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Retorna:")," A classe prevista com os detectores ou None se a amostra n\xe3o se qualificar a nenhuma classe."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fun\xe7\xe3o-__detector_is_valid_to_vdetector"},"Fun\xe7\xe3o __detector_is_valid_to_Vdetector(...):"),(0,r.kt)("p",null,"Verifique se a dist\xe2ncia entre o detector e as amostras, descontando o raio das amostras, \xe9 maior do que o raio m\xednimo."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def __detector_is_valid_to_Vdetector(self, distance, vector_x):\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Os par\xe2metros de entrada s\xe3o:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"distance (",(0,r.kt)("inlineCode",{parentName:"li"},"float"),"): dist\xe2ncia m\xednima calculada entre todas as amostras."),(0,r.kt)("li",{parentName:"ul"},"vector_x (",(0,r.kt)("inlineCode",{parentName:"li"},"numpy.ndarray"),"): vetor x candidato do detector gerado aleatoriamente, com valores entre 0 e 1.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Retorna:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"False"),": caso o raio calculado seja menor do que a dist\xe2ncia m\xednima ou ultrapasse a borda do espa\xe7o, caso essa op\xe7\xe3o esteja habilitada."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"True")," e a dist\xe2ncia menos o raio das amostras, caso o raio seja v\xe1lido.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fun\xe7\xe3o-__distance"},"Fun\xe7\xe3o __distance(...):"),(0,r.kt)("p",null,"A fun\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"def __distance(...)")," calcula a dist\xe2ncia entre dois pontos utilizando a t\xe9cnica definida em ",(0,r.kt)("inlineCode",{parentName:"p"},"mettric"),", no qual s\xe3o: ",(0,r.kt)("inlineCode",{parentName:"p"},"'euclidiana', 'minkowski', ou 'manhattan'")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def __distance(self, u: npt.NDArray, v: npt.NDArray):\n")),(0,r.kt)("p",null,"Os par\xe2metros de entrada s\xe3o NDArrays: ",(0,r.kt)("inlineCode",{parentName:"p"},"u")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"v"),", com as coordenadas para os pontos."),(0,r.kt)("p",null,"Retorna a distancia (",(0,r.kt)("inlineCode",{parentName:"p"},"double"),") entre os dois pontos."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fun\xe7\xe3o-__slice_index_list_by_class"},"Fun\xe7\xe3o __slice_index_list_by_class(...):"),(0,r.kt)("p",null,"A fun\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"__slice_index_list_by_class(...)"),", separa os \xedndices das linhas conforme a classe de sa\xedda, para percorrer o array de amostra, apenas nas posi\xe7\xf5es que a sa\xedda for a classe que est\xe1 sendo treinada:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def __slice_index_list_by_class(self, y: npt.NDArray) -> dict:\n")),(0,r.kt)("p",null,"Retorna um dicionario com as classes como chave e os \xedndices em ",(0,r.kt)("inlineCode",{parentName:"p"},"X")," das amostras."),(0,r.kt)("hr",null))}m.isMDXComponent=!0}}]);