"use strict";(self.webpackChunkais_project_github_io=self.webpackChunkais_project_github_io||[]).push([[41],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>f});var r=a(7294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,s=function(e,t){if(null==e)return{};var a,r,s={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,s=e.mdxType,n=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=c(a),m=s,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||n;return a?r.createElement(f,i(i({ref:t},d),{},{components:a})):r.createElement(f,i({ref:t},d))}));function f(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var n=a.length,i=new Array(n);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:s,i[1]=o;for(var c=2;c<n;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},170:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var r=a(7462),s=(a(7294),a(3905));const n={sidebar_position:1,title:"Multiclasse",sidebar_label:"Multiclass",lastUpdatedAt:"2025/04/04",author:"Jo\xe3o Paulo"},i=void 0,o={unversionedId:"advanced-guides/Utils/Multiclass",id:"advanced-guides/Utils/Multiclass",title:"Multiclasse",description:"Este arquivo cont\xe9m fun\xe7\xf5es utilit\xe1rias internas desenvolvidas para simplificar a manipula\xe7\xe3o e o processamento de dados em cen\xe1rios de classifica\xe7\xe3o multiclasse dentro do pacote AISP.",source:"@site/i18n/pt-br/docusaurus-plugin-content-docs/current/advanced-guides/Utils/Multiclass.md",sourceDirName:"advanced-guides/Utils",slug:"/advanced-guides/Utils/Multiclass",permalink:"/pt-br/docs/advanced-guides/Utils/Multiclass",draft:!1,tags:[],version:"current",lastUpdatedBy:"Jo\xe3o Paulo",lastUpdatedAt:1743829908,formattedLastUpdatedAt:"5 de abr. de 2025",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Multiclasse",sidebar_label:"Multiclass",lastUpdatedAt:"2025/04/04",author:"Jo\xe3o Paulo"},sidebar:"tutorialSidebar",previous:{title:"Metrics",permalink:"/pt-br/docs/advanced-guides/Utils/Metrics"},next:{title:"Sobre n\xf3s",permalink:"/pt-br/docs/About us"}},l={},c=[{value:"def slice_index_list_by_class(...)",id:"def-slice_index_list_by_class",level:3},{value:"Parameters:",id:"parameters",level:2}],d={toc:c},u="wrapper";function p(e){let{components:t,...a}=e;return(0,s.kt)(u,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Este arquivo cont\xe9m fun\xe7\xf5es utilit\xe1rias internas desenvolvidas para simplificar a manipula\xe7\xe3o e o processamento de dados em cen\xe1rios de classifica\xe7\xe3o multiclasse dentro do pacote AISP."),(0,s.kt)("h3",{id:"def-slice_index_list_by_class"},"def slice_index_list_by_class(...)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"def slice_index_list_by_class(classes: Union[npt.NDArray, list], y: npt.NDArray) -> dict\n")),(0,s.kt)("p",null,"A fun\xe7\xe3o ",(0,s.kt)("inlineCode",{parentName:"p"},"slice_index_list_by_class(...)"),", separa os \xedndices das linhas conforme a \\\nclasse de sa\xedda, para percorrer o array de amostra, apenas nas posi\xe7\xf5es que a sa\xedda for \\\na classe que est\xe1 sendo treinada."),(0,s.kt)("h2",{id:"parameters"},"Parameters:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"* classes (``list or npt.NDArray``): lista com classes \xfanicas.\n* y (npt.NDArray): Recebe um array ``y``[``N amostra``] com as classes de sa\xedda do \\\n    array de amostra ``X``.\n\nReturns:\n---\n* dict: Um dicion\xe1rio com a lista de posi\xe7\xf5es do array(``y``), com as classes como chave.\n")))}p.isMDXComponent=!0}}]);