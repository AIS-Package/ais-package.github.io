"use strict";(self.webpackChunkais_package_github_io=self.webpackChunkais_package_github_io||[]).push([[6451],{1336:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"Getting Started/basic use/AiNet","title":"Usando o AiNet","description":"Acesse o Jupyter Notebook com o c\xf3digo dispon\xedvel aqui!","source":"@site/i18n/pt-br/docusaurus-plugin-content-docs/version-0.3.x/Getting Started/basic use/AiNet.mdx","sourceDirName":"Getting Started/basic use","slug":"/Getting Started/basic use/AiNet","permalink":"/pt-br/docs/Getting Started/basic use/AiNet","draft":false,"unlisted":false,"tags":[],"version":"0.3.x","lastUpdatedBy":"Jo\xe3o Paulo","lastUpdatedAt":1754092800000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4,"sidebar_label":"Usando o AiNet","lastUpdatedAt":"2025/08/02","author":"Jo\xe3o Paulo","showLastUpdateAuthor":true,"showLastUpdateTime":true,"last_update":{"date":"2025/08/02","author":"Jo\xe3o Paulo"},"keywords":["Rede Imune Artificial","AiNet","algoritmos inspirados no sistema imune","agrupamento","aprendizado de m\xe1quina","detec\xe7\xe3o de anomalias","make_blobs","make_moons","make_circles","visualiza\xe7\xe3o de dados","networkx"]},"sidebar":"docs","previous":{"title":"Usando o AIRS","permalink":"/pt-br/docs/Getting Started/basic use/AIRS"},"next":{"title":"T\xe9cnicas implementadas","permalink":"/pt-br/docs/aisp-techniques/"}}');var a=n(4848),t=n(8453);const i={sidebar_position:4,sidebar_label:"Usando o AiNet",lastUpdatedAt:"2025/08/02",author:"Jo\xe3o Paulo",showLastUpdateAuthor:!0,showLastUpdateTime:!0,last_update:{date:"2025/08/02",author:"Jo\xe3o Paulo"},keywords:["Rede Imune Artificial","AiNet","algoritmos inspirados no sistema imune","agrupamento","aprendizado de m\xe1quina","detec\xe7\xe3o de anomalias","make_blobs","make_moons","make_circles","visualiza\xe7\xe3o de dados","networkx"]},r="Usando o AiNet",l={},d=[{value:"Introdu\xe7\xe3o",id:"introdu\xe7\xe3o",level:2},{value:"Importando a Rede Imune Artificial",id:"importando-a-rede-imune-artificial",level:2},{value:"Fun\xe7\xe3o de Visualiza\xe7\xe3o",id:"fun\xe7\xe3o-de-visualiza\xe7\xe3o",level:2},{value:"Demonstra\xe7\xe3o 1 - Dataset Blobs",id:"demonstra\xe7\xe3o-1---dataset-blobs",level:2},{value:"Gerando bolhas de dados",id:"gerando-bolhas-de-dados",level:3},{value:"Treinando o modelo AiNet",id:"treinando-o-modelo-ainet",level:3},{value:"Silhouette score",id:"silhouette-score",level:3},{value:"Visualizando os resultados",id:"visualizando-os-resultados",level:3},{value:"Demonstra\xe7\xe3o 2 - Moons Dataset",id:"demonstra\xe7\xe3o-2---moons-dataset",level:2},{value:"Gerando dados em formato de &quot;moons&quot; (luas)",id:"gerando-dados-em-formato-de-moons-luas",level:3},{value:"Treinando o AiNet",id:"treinando-o-ainet",level:3},{value:"Silhouette score",id:"silhouette-score-1",level:3},{value:"Visualizando",id:"visualizando",level:3},{value:"Demonstra\xe7\xe3o 3 - Circles Dataset",id:"demonstra\xe7\xe3o-3---circles-dataset",level:2},{value:"Gerando dados em formato de c\xedrculos conc\xeantricos",id:"gerando-dados-em-formato-de-c\xedrculos-conc\xeantricos",level:3},{value:"Training AiNet",id:"training-ainet",level:3},{value:"Silhouette score",id:"silhouette-score-2",level:3},{value:"Visualizando o AiNet nos dados de c\xedrculos",id:"visualizando-o-ainet-nos-dados-de-c\xedrculos",level:3}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{Details:o}=s;return o||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"usando-o-ainet",children:"Usando o AiNet"})}),"\n",(0,a.jsxs)(s.p,{children:["Acesse o Jupyter Notebook com o c\xf3digo dispon\xedvel ",(0,a.jsx)(s.a,{href:"https://github.com/AIS-Package/aisp/blob/main/examples/pt-br/clustering/AiNet/example_with_randomly_generated_dataset.ipynb",children:"aqui"}),"!"]}),"\n",(0,a.jsxs)(s.p,{children:["Execute o notebook online via Binder: ",(0,a.jsx)(s.a,{href:"https://mybinder.org/v2/gh/AIS-Package/aisp/HEAD?labpath=%2Fexamples%2Fpt-br%2Fclustering%2FAiNet%2Fexample_with_randomly_generated_dataset.ipynb",children:(0,a.jsx)(s.img,{src:"https://mybinder.org/badge_logo.svg",alt:"Binder"})})]}),"\n",(0,a.jsx)(s.h2,{id:"introdu\xe7\xe3o",children:"Introdu\xe7\xe3o"}),"\n",(0,a.jsx)(s.p,{children:"A clusteriza\xe7\xe3o \xe9 uma tarefa de aprendizado de m\xe1quina n\xe3o supervisionado que visa agrupar um conjunto de dados no mesmo grupo (chamado de cluster)."}),"\n",(0,a.jsx)(s.p,{children:"Neste notebook, exploraremos o AiNet (Artificial Immune Network). O AiNet utiliza conceitos como afinidade de anticorpos e supress\xe3o de clones para identificar os centros dos clusters nos dados."}),"\n",(0,a.jsx)(s.p,{children:"Objetivo: O objetivo \xe9 demonstrar a efic\xe1cia do AiNet na clusteriza\xe7\xe3o dos conjuntos de dados random:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Blobs:"})," Clusters bem definidos e esf\xe9ricos."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Moons:"})," Clusters com uma forma n\xe3o linear."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Circles:"})," Clusters dispostos em dois c\xedrculos conc\xeantricos, apresentando separa\xe7\xe3o n\xe3o linear."]}),"\n"]}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.strong,{children:"Estrutura do Notebook:"})}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Configura\xe7\xe3o:"})," Instala\xe7\xe3o e importa\xe7\xe3o das bibliotecas necess\xe1rias."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Fun\xe7\xe3o de Visualiza\xe7\xe3o:"})," Defini\xe7\xe3o de uma fun\xe7\xe3o para plotar os resultados."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Demonstra\xe7\xe3o 1"})," - Dataset Blobs: Aplica\xe7\xe3o do AiNet ao blobs."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Demonstra\xe7\xe3o 2"})," - Dataset Moons: Aplica\xe7\xe3o do AiNet ao moons."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Demonstra\xe7\xe3o 3"})," - Dataset Circles: Aplica\xe7\xe3o do AiNet ao circles."]}),"\n"]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"importando-a-rede-imune-artificial",children:"Importando a Rede Imune Artificial"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"from aisp.ina import AiNet\n"})}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"fun\xe7\xe3o-de-visualiza\xe7\xe3o",children:"Fun\xe7\xe3o de Visualiza\xe7\xe3o"}),"\n",(0,a.jsxs)(o,{children:[(0,a.jsx)("summary",{children:"Fun\xe7\xe3o de Visualiza\xe7\xe3o do AiNet (plota agrupamentos e a rede imune)"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"def plot_immune_network(train_x, predict_y, model, title_prefix=\"\"):\n    \"\"\"\n    Plota os resultados da clusteriza\xe7\xe3o da AiNet.\n\n    Paramentos:\n        train_x (np.array): Os dados de entrada.\n        predict_y (np.array): As previs\xf5es de cluster do modelo.\n        model (AiNet): O modelo AiNet treinado.\n        title_prefix (str, optional): Um prefixo para os t\xedtulos dos gr\xe1ficos.\n    \"\"\"\n    clusters = list(model._memory_network.values())\n    network = np.array(model._population_antibodies)\n    \n    _, axs = plt.subplots(2, 2, figsize=(12, 12))\n    colors = colormaps.get_cmap('Accent')\n\n    # Dados originais\n    axs[0][0].scatter(train_x[:, 0], train_x[:, 1], color='dodgerblue', alpha=0.9, s=50, marker='o', edgecolors='k')\n    axs[0][0].set_title(f'{title_prefix}Dados Originais', fontsize=16)\n    axs[0][0].set_xlabel('X', fontsize=14)\n    axs[0][0].set_ylabel('Y', fontsize=14)\n    axs[0][0].grid(True, linestyle='--', alpha=0.5)\n\n    # Popula\xe7\xe3o de anticorpos\n    axs[0][1].scatter(network[:, 0], network[:, 1], color='crimson', alpha=0.9, s=70, marker='.', edgecolors='k')\n    axs[0][1].set_title(f'{title_prefix}Popula\xe7\xe3o de Anticorpos', fontsize=16)\n    axs[0][1].set_xlabel('X', fontsize=14)\n    axs[0][1].set_ylabel('Y', fontsize=14)\n    axs[0][1].grid(True, linestyle='--', alpha=0.5)\n\n    # Previs\xf5es dos clusters\n    scatter = axs[1][0].scatter(train_x[:, 0], train_x[:, 1], c=predict_y, cmap='Accent', s=50, edgecolors='k', alpha=0.9)\n    axs[1][0].set_title(f'{title_prefix}Previs\xf5es dos Clusters (AiNet)', fontsize=16)\n    axs[1][0].set_xlabel('X', fontsize=14)\n    axs[1][0].set_ylabel('Y', fontsize=14)\n    axs[1][0].grid(True, linestyle='--', alpha=0.5)\n    legend1 = axs[1][0].legend(*scatter.legend_elements(), title=\"Clusters\")\n    axs[1][0].add_artist(legend1)\n\n    # Grafo da Rede Imune\n    G = nx.Graph()\n    positions = {}\n    for i, cluster in enumerate(clusters):\n        cluster_nodes = [f'{i}_{j}' for j in range(len(cluster))]\n        G.add_nodes_from(cluster_nodes)\n        for node, point in zip(cluster_nodes, cluster):\n            positions[node] = tuple(point)\n        dist_matrix = squareform(pdist(cluster))\n        mst_local = minimum_spanning_tree(dist_matrix).toarray()\n        for row_idx, row in enumerate(mst_local):\n            for col_idx, weight in enumerate(row):\n                if weight > 0:\n                    G.add_edge(cluster_nodes[row_idx], cluster_nodes[col_idx], weight=weight)\n    for i, cluster in enumerate(clusters):\n        cluster_nodes = [f'{i}_{j}' for j in range(len(cluster))]\n        nx.draw_networkx_nodes(G, positions, nodelist=cluster_nodes, ax=axs[1][1],\n                               node_color=[colors(i)], node_size=70, edgecolors='k', label=f'Cluster {i}')\n    nx.draw_networkx_edges(G, positions, ax=axs[1][1], alpha=0.6)\n    axs[1][1].set_title(f'{title_prefix}Rede Imune Grafo', fontsize=16)\n    axs[1][1].set_xlabel('X', fontsize=14)\n    axs[1][1].set_ylabel('Y', fontsize=14)\n    axs[1][1].grid(True, linestyle='--', alpha=0.5)\n    axs[1][1].legend()\n    plt.tight_layout()\n    plt.show()\n"})})]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"demonstra\xe7\xe3o-1---dataset-blobs",children:"Demonstra\xe7\xe3o 1 - Dataset Blobs"}),"\n",(0,a.jsx)(s.h3,{id:"gerando-bolhas-de-dados",children:"Gerando bolhas de dados"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"samples, output = make_blobs(\n    n_samples=1000,\n    cluster_std=0.07,\n    center_box=(0.0, 1.0),\n    centers=[[0.25, 0.75], [0.75, 0.25]],\n    random_state=1234,\n)\n"})}),"\n",(0,a.jsx)(s.h3,{id:"treinando-o-modelo-ainet",children:"Treinando o modelo AiNet"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"model = AiNet(suppression_threshold=0.96, affinity_threshold=0.95, mst_inconsistency_factor=3, seed=123)\npredict_y = model.fit_predict(samples)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Output:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"\u2714 Set of memory antibodies for classes (0, 1) successfully generated | Clusters: 2 | Population of antibodies size: 119:  \u2507\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2507 10/10 total training interactions\n"})}),"\n",(0,a.jsx)(s.h3,{id:"silhouette-score",children:"Silhouette score"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'silhouette = silhouette_score(samples, predict_y)\nprint(f"Coeficiente de Silhueta: {silhouette:.3f}")\n'})}),"\n",(0,a.jsx)(s.p,{children:"Output:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"Coeficiente de Silhueta: 0.826\n"})}),"\n",(0,a.jsx)(s.h3,{id:"visualizando-os-resultados",children:"Visualizando os resultados"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'plot_immune_network(samples, predict_y, model, title_prefix="Blobs - ")\n'})}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.img,{alt:"Blobs",src:n(6860).A+"",width:"1189",height:"1189"})}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"demonstra\xe7\xe3o-2---moons-dataset",children:"Demonstra\xe7\xe3o 2 - Moons Dataset"}),"\n",(0,a.jsx)(s.h3,{id:"gerando-dados-em-formato-de-moons-luas",children:'Gerando dados em formato de "moons" (luas)'}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"samples, output = make_moons(n_samples=1000, noise=0.05, random_state=42)\nsamples = MinMaxScaler().fit_transform(samples)\n"})}),"\n",(0,a.jsx)(s.h3,{id:"treinando-o-ainet",children:"Treinando o AiNet"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"model = AiNet(suppression_threshold=0.95, affinity_threshold=0.97, mst_inconsistency_factor=2.5, seed=123)\npredict_y = model.fit_predict(samples)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Output:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"\u2714 Set of memory antibodies for classes (0, 1) successfully generated | Clusters: 2 | Population of antibodies size: 69:  \u2507\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2507 10/10 total training interactions\n"})}),"\n",(0,a.jsx)(s.h3,{id:"silhouette-score-1",children:"Silhouette score"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'silhouette = silhouette_score(samples, predict_y)\nprint(f"Coeficiente de Silhueta: {silhouette:.3f}")\n'})}),"\n",(0,a.jsx)(s.p,{children:"Output:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"Coeficiente de Silhueta: 0.398\n"})}),"\n",(0,a.jsx)(s.h3,{id:"visualizando",children:"Visualizando"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'plot_immune_network(samples, predict_y, model, title_prefix="Moons - ")\n'})}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.img,{alt:"Moons",src:n(8474).A+"",width:"1189",height:"1189"})}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"demonstra\xe7\xe3o-3---circles-dataset",children:"Demonstra\xe7\xe3o 3 - Circles Dataset"}),"\n",(0,a.jsx)(s.h3,{id:"gerando-dados-em-formato-de-c\xedrculos-conc\xeantricos",children:"Gerando dados em formato de c\xedrculos conc\xeantricos"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"samples, output = make_circles(n_samples=1000, noise=0.05, factor=0.5, random_state=42)\nsamples = MinMaxScaler().fit_transform(samples)\n"})}),"\n",(0,a.jsx)(s.h3,{id:"training-ainet",children:"Training AiNet"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"model = AiNet(suppression_threshold=0.97, affinity_threshold=0.98, mst_inconsistency_factor=3.8, seed=123)\npredict_y = model.fit_predict(samples)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Output:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"\u2714 Set of memory antibodies for classes (0, 1) successfully generated | Clusters: 2 | Population of antibodies size: 169:  \u2507\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2507 10/10 total training interactions\n"})}),"\n",(0,a.jsx)(s.h3,{id:"silhouette-score-2",children:"Silhouette score"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'silhouette = silhouette_score(samples, predict_y)\nprint(f"Coeficiente de Silhueta: {silhouette:.3f}")\n'})}),"\n",(0,a.jsx)(s.p,{children:"Output:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"Coeficiente de Silhueta: 0.112\n"})}),"\n",(0,a.jsx)(s.h3,{id:"visualizando-o-ainet-nos-dados-de-c\xedrculos",children:"Visualizando o AiNet nos dados de c\xedrculos"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'plot_immune_network(samples, predict_y, model, title_prefix="Circles - ")\n'})}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.img,{src:n(3935).A+"",width:"1189",height:"1189"})})]})}function u(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},3935:(e,s,n)=>{n.d(s,{A:()=>o});const o=n.p+"assets/images/ainet_circler-3ca40b827fb3919a54e08075d070686a.png"},6860:(e,s,n)=>{n.d(s,{A:()=>o});const o=n.p+"assets/images/ainet_blob-f1a48b1eadfe2fec2d54f995f350ab2c.png"},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>r});var o=n(6540);const a={},t=o.createContext(a);function i(e){const s=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(t.Provider,{value:s},e.children)}},8474:(e,s,n)=>{n.d(s,{A:()=>o});const o=n.p+"assets/images/ainet_moon-17ccd671a0cc22e006ace3df739b0f74.png"}}]);