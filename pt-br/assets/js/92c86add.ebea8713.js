"use strict";(self.webpackChunkais_package_github_io=self.webpackChunkais_package_github_io||[]).push([[3772],{1583:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"advanced-guides/Utils/Validation","title":"Validation","description":"def detectvectordata_type(...)","source":"@site/i18n/pt-br/docusaurus-plugin-content-docs/version-0.3.x/advanced-guides/Utils/Validation.md","sourceDirName":"advanced-guides/Utils","slug":"/advanced-guides/Utils/Validation","permalink":"/pt-br/docs/advanced-guides/Utils/Validation","draft":false,"unlisted":false,"tags":[],"version":"0.3.x","lastUpdatedBy":"Jo\xe3o Paulo","lastUpdatedAt":1756436760000,"frontMatter":{},"sidebar":"docs","previous":{"title":"Sanitizers","permalink":"/pt-br/docs/advanced-guides/Utils/Sanitizers"},"next":{"title":"Metrics","permalink":"/pt-br/docs/advanced-guides/utils/Metrics"}}');var s=t(4848),o=t(8453);const r={},a="Validation",i={},c=[{value:"def detect_vector_data_type(...)",id:"def-detect_vector_data_type",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"validation",children:"Validation"})}),"\n",(0,s.jsx)(n.h2,{id:"def-detect_vector_data_type",children:"def detect_vector_data_type(...)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def detect_vector_data_type(\n    vector: npt.NDArray\n) -> FeatureType:\n"})}),"\n",(0,s.jsx)(n.p,{children:"Detecta o tipo de dado em um determinado vetor."}),"\n",(0,s.jsx)(n.p,{children:"Esta fun\xe7\xe3o analisa o vetor de entrada e classifica seus dados como um dos tipos suportados:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"bin\xe1rio"}),": Valores booleanos (",(0,s.jsx)(n.code,{children:"True"}),"/",(0,s.jsx)(n.code,{children:"False"}),") ou inteiro ",(0,s.jsx)(n.code,{children:"0"}),"/",(0,s.jsx)(n.code,{children:"1"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"cont\xednuo"}),": Valores float dentro do intervalo normalizado ",(0,s.jsx)(n.code,{children:"[0.0, 1.0]"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"intervalo"}),": Valores float fora do intervalo normalizado."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Par\xe2metros"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"vetor"})," (",(0,s.jsx)(n.code,{children:"npt.NDArray"}),"): Um array contendo os dados a serem classificados."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FeatureType"})," (",(0,s.jsx)(n.code,{children:'Literal["binary-features", "continuous-features", "ranged-features"]'}),"): O tipo de dado detectado no vetor."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Lan\xe7a"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"UnsupportedDataTypeError"}),": Gerado se o vetor contiver um tipo de dado n\xe3o suportado."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var d=t(6540);const s={},o=d.createContext(s);function r(e){const n=d.useContext(o);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),d.createElement(o.Provider,{value:n},e.children)}}}]);