"use strict";(self.webpackChunkais_package_github_io=self.webpackChunkais_package_github_io||[]).push([[6038],{3784:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>t,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"advanced-guides/base-classes-reference/csa/airs","title":"Classe Base do Sistema Imunol\xf3gico Artificial de Reconhecimento","description":"`BaseAIRS(BaseClassifier, ABC)`","source":"@site/i18n/pt-br/docusaurus-plugin-content-docs/version-0.3.x/advanced-guides/base-classes-reference/csa/airs.md","sourceDirName":"advanced-guides/base-classes-reference/csa","slug":"/advanced-guides/base-classes-reference/csa/airs","permalink":"/pt-br/docs/advanced-guides/base-classes-reference/csa/airs","draft":false,"unlisted":false,"tags":[],"version":"0.3.x","lastUpdatedBy":"Jo\xe3o Paulo","lastUpdatedAt":1756854629000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Classe Base do Sistema Imunol\xf3gico Artificial de Reconhecimento","sidebar_label":"Sistema Imunol\xf3gico Artificial de Reconhecimento","lastUpdatedAt":"2025/05/25","author":"Jo\xe3o Paulo","keywords":["BaseAIRS","AIRS","Sistema Imunol\xf3gico Artificial de Reconhecimento","Sistemas Imunol\xf3gicos Artificiais","Classificador Base","Atributos Cont\xednuos","Atributos Bin\xe1rios","Valida\xe7\xe3o de Atributos","Aprendizado de M\xe1quina","Classifica\xe7\xe3o"]},"sidebar":"docs","previous":{"title":"Algoritmos de Sele\xe7\xe3o Clonal","permalink":"/pt-br/docs/advanced-guides/base-classes-reference/csa/"},"next":{"title":"Algoritmos de Rede Imunol\xf3gica","permalink":"/pt-br/docs/advanced-guides/base-classes-reference/ina/"}}');var i=a(4848),r=a(8453);const o={sidebar_position:1,title:"Classe Base do Sistema Imunol\xf3gico Artificial de Reconhecimento",sidebar_label:"Sistema Imunol\xf3gico Artificial de Reconhecimento",lastUpdatedAt:"2025/05/25",author:"Jo\xe3o Paulo",keywords:["BaseAIRS","AIRS","Sistema Imunol\xf3gico Artificial de Reconhecimento","Sistemas Imunol\xf3gicos Artificiais","Classificador Base","Atributos Cont\xednuos","Atributos Bin\xe1rios","Valida\xe7\xe3o de Atributos","Aprendizado de M\xe1quina","Classifica\xe7\xe3o"]},c=void 0,t={},d=[{value:"<code>BaseAIRS(BaseClassifier, ABC)</code>",id:"baseairsbaseclassifier-abc",level:2},{value:"def _check_and_raise_exceptions_fit(...):",id:"def-_check_and_raise_exceptions_fit",level:3},{value:"def _check_and_raise_exceptions_predict(...):",id:"def-_check_and_raise_exceptions_predict",level:3}];function l(e){const s={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"baseairsbaseclassifier-abc",children:(0,i.jsx)(s.code,{children:"BaseAIRS(BaseClassifier, ABC)"})}),"\n",(0,i.jsxs)(s.p,{children:["Classe base para o algoritmo ",(0,i.jsx)(s.strong,{children:"AIRS"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"A classe base cont\xe9m fun\xe7\xf5es que s\xe3o utilizadas por mais de uma classe no pacote e, portanto, s\xe3o consideradas essenciais para o funcionamento geral do sistema."}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"def-_check_and_raise_exceptions_fit",children:"def _check_and_raise_exceptions_fit(...):"}),"\n",(0,i.jsxs)(s.p,{children:["Verifica os par\xe2metros de ajuste (",(0,i.jsx)(s.em,{children:"fit"}),") e lan\xe7a exce\xe7\xf5es caso a verifica\xe7\xe3o n\xe3o seja bem-sucedida."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:'@staticmethod\ndef _check_and_raise_exceptions_fit(\n    X: npt.NDArray = None,\n    y: npt.NDArray = None,\n    algorithm: Literal[\n        "continuous-features", "binary-features"\n    ] = "continuous-features"\n):\n'})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Par\xe2metros"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"X"})})," (",(0,i.jsx)(s.code,{children:"npt.NDArray"}),"): Array de treinamento, contendo as amostras e suas caracter\xedsticas, com formato [",(0,i.jsx)(s.code,{children:"N amostras"})," (linhas)][",(0,i.jsx)(s.code,{children:"N caracter\xedsticas"})," (colunas)]."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"y"})})," (",(0,i.jsx)(s.code,{children:"npt.NDArray"}),"): Array das classes alvo de ",(0,i.jsx)(s.code,{children:"X"})," com [",(0,i.jsx)(s.code,{children:"N amostras"})," (linhas)]."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"algorithm"})})," (",(0,i.jsx)(s.code,{children:'Literal["continuous-features", "binary-features"], opcional'}),"): Especifica o tipo de algoritmo a ser usado, dependendo se os dados de entrada possuem caracter\xedsticas cont\xednuas ou bin\xe1rias."]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Exce\xe7\xf5es"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"TypeError"}),":\nSe X ou y n\xe3o forem ndarrays ou tiverem formatos incompat\xedveis."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"ValueError"}),":\nSe a ",(0,i.jsx)(s.em,{children:"classe"})," for BNSA e X contiver valores que n\xe3o sejam compostos apenas por 0 e 1."]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"def-_check_and_raise_exceptions_predict",children:"def _check_and_raise_exceptions_predict(...):"}),"\n",(0,i.jsx)(s.p,{children:"Verifica os par\xe2metros de predi\xe7\xe3o e lan\xe7a exce\xe7\xf5es caso a verifica\xe7\xe3o n\xe3o seja bem-sucedida."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:'@staticmethod\ndef _check_and_raise_exceptions_predict(\n    X: npt.NDArray = None,\n    expected: int = 0,\n    algorithm: Literal[\n        "continuous-features", "binary-features"\n    ] = "continuous-features"\n) -> None:\n'})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Par\xe2metros"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"X"})})," (",(0,i.jsx)(s.code,{children:"npt.NDArray"}),"): Array de entrada, contendo as amostras e suas caracter\xedsticas, com formato [",(0,i.jsx)(s.code,{children:"N amostras"})," (linhas)][",(0,i.jsx)(s.code,{children:"N caracter\xedsticas"})," (colunas)]."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"expected"})})," (",(0,i.jsx)(s.code,{children:"int"}),"): N\xfamero esperado de caracter\xedsticas por amostra (colunas de X)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:(0,i.jsx)(s.strong,{children:"algorithm"})})," (",(0,i.jsx)(s.code,{children:'Literal["continuous-features", "binary-features"], opcional'}),"): Especifica o tipo de algoritmo a ser usado, dependendo se os dados de entrada possuem caracter\xedsticas cont\xednuas ou bin\xe1rias."]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Exce\xe7\xf5es"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"TypeError"}),":\nSe X n\xe3o for um ndarray ou lista."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"FeatureDimensionMismatch"}),":\nSe o n\xfamero de caracter\xedsticas em X n\xe3o corresponder ao n\xfamero esperado."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"ValueError"}),':\nSe o algoritmo for "binary-features" e X contiver valores que n\xe3o sejam compostos apenas por 0 e 1.']}),"\n"]}),"\n",(0,i.jsx)(s.hr,{})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,s,a)=>{a.d(s,{R:()=>o,x:()=>c});var n=a(6540);const i={},r=n.createContext(i);function o(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);