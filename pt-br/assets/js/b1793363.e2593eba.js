"use strict";(self.webpackChunkais_package_github_io=self.webpackChunkais_package_github_io||[]).push([[3099],{91:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"aisp-techniques/clonal-selection-algorithms/clonalg","title":"CLONALG - Algoritmo de Sele\xe7\xe3o Clonal","description":"A classe Clonalg \xe9 um algoritmo de otimiza\xe7\xe3o inspirado no processo biol\xf3gico de sele\xe7\xe3o clonal do sistema imunol\xf3gico. Esta implementa\xe7\xe3o \xe9 projetada para minimizar ou maximizar fun\xe7\xf5es de custo em diversos tipos de problemas, incluindo problemas bin\xe1rios, cont\xednuos, com valores limitados (ranged) e de permuta\xe7\xe3o.","source":"@site/i18n/pt-br/docusaurus-plugin-content-docs/version-0.4.x/aisp-techniques/clonal-selection-algorithms/clonalg.md","sourceDirName":"aisp-techniques/clonal-selection-algorithms","slug":"/aisp-techniques/clonal-selection-algorithms/clonalg","permalink":"/pt-br/docs/aisp-techniques/clonal-selection-algorithms/clonalg","draft":false,"unlisted":false,"tags":[],"version":"0.4.x","lastUpdatedBy":"Jo\xe3o Paulo","lastUpdatedAt":1759068822000,"frontMatter":{"id":"clonalg","sidebar_label":"CLONALG - Algoritmo de Sele\xe7\xe3o Clonal","keywords":["CLONALG","algoritmo de sele\xe7\xe3o clonal","otimiza\xe7\xe3o bio-inspirada","intelig\xeancia artificial","problemas bin\xe1rios","problemas cont\xednuos","ranged optimization","permuta\xe7\xe3o","metaheur\xedsticas"]},"sidebar":"docs","previous":{"title":"ABR - Bolha de reconhecimento artificial","permalink":"/pt-br/docs/aisp-techniques/clonal-selection-algorithms/airs/abr"},"next":{"title":"Teoria da Rede Imunol\xf3gica","permalink":"/pt-br/docs/aisp-techniques/immune-network-theory/"}}');var s=o(4848),a=o(8453);const r={id:"clonalg",sidebar_label:"CLONALG - Algoritmo de Sele\xe7\xe3o Clonal",keywords:["CLONALG","algoritmo de sele\xe7\xe3o clonal","otimiza\xe7\xe3o bio-inspirada","intelig\xeancia artificial","problemas bin\xe1rios","problemas cont\xednuos","ranged optimization","permuta\xe7\xe3o","metaheur\xedsticas"]},l="CLONALG - Algoritmo de Sele\xe7\xe3o Clonal",d={},t=[{value:"CLONALG Constructor",id:"CLONALG-Constructor",level:2},{value:"M\xe9todos P\xfablicos",id:"M\xe9todos-P\xfablicos",level:3},{value:"Fun\xe7\xe3o <code>optimize(...)</code>",id:"Fun\xe7\xe3o-optimize",level:4},{value:"Fun\xe7\xe3o <code>affinity_function(...)</code>",id:"Fun\xe7\xe3o-affinity_function",level:4},{value:"M\xe9todos Privados",id:"M\xe9todos-Privados",level:3},{value:"Fun\xe7\xe3o <code>_select_top_antibodies(...)</code>",id:"Fun\xe7\xe3o-_select_top_antibodies",level:4},{value:"Fun\xe7\xe3o <code>_init_population_antibodies(...)</code>",id:"Fun\xe7\xe3o-_init_population_antibodies",level:4},{value:"Fun\xe7\xe3o <code>_diversity_introduction(...)</code>",id:"Fun\xe7\xe3o-_diversity_introduction",level:4},{value:"Fun\xe7\xe3o <code>_clone_and_mutate(...)</code>",id:"Fun\xe7\xe3o-_clone_and_mutate",level:4},{value:"Fun\xe7\xe3o <code>_clone_and_hypermutation(...)</code>",id:"Fun\xe7\xe3o-_clone_and_hypermutation",level:4},{value:"1",id:"1",level:5}];function c(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"CLONALG---Algoritmo-de-Sele\xe7\xe3o-Clonal",children:"CLONALG - Algoritmo de Sele\xe7\xe3o Clonal"})}),"\n",(0,s.jsxs)(n.p,{children:["A classe ",(0,s.jsx)(n.code,{children:"Clonalg"})," \xe9 um ",(0,s.jsx)(n.strong,{children:"algoritmo de otimiza\xe7\xe3o"})," inspirado no processo biol\xf3gico de sele\xe7\xe3o clonal do sistema imunol\xf3gico. Esta implementa\xe7\xe3o \xe9 projetada para minimizar ou maximizar fun\xe7\xf5es de custo em diversos tipos de problemas, incluindo problemas bin\xe1rios, cont\xednuos, com valores limitados (ranged) e de permuta\xe7\xe3o."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["A implementa\xe7\xe3o do CLONALG foi inspirada na descri\xe7\xe3o apresentada em ",(0,s.jsx)(n.a,{href:"#1",children:"1"}),"."]})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"Esta implementa\xe7\xe3o do CLONALG cont\xe9m algumas altera\xe7\xf5es baseadas no contexto do AISP, para aplica\xe7\xe3o geral\na diversos problemas, que podem produzir resultados diferentes da implementa\xe7\xe3o padr\xe3o ou\nespec\xedfica. Esta adapta\xe7\xe3o visa generalizar o CLONALG para tarefas de minimiza\xe7\xe3o e\nmaximiza\xe7\xe3o, al\xe9m de suportar problemas cont\xednuos, discretos e de permuta\xe7\xe3o."})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"CLONALG-Constructor",children:"CLONALG Constructor"}),"\n",(0,s.jsx)(n.p,{children:"O construtor inicializa a inst\xe2ncia do CLONALG com os principais par\xe2metros que definem o processo de otimiza\xe7\xe3o."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Atributos:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"problem_size"}),": ",(0,s.jsx)(n.code,{children:"int"})," - Dimens\xe3o do problema a ser otimizado."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"N"}),": ",(0,s.jsx)(n.code,{children:"int"}),", padr\xe3o=50 - N\xfamero de c\xe9lulas de mem\xf3ria (anticorpos) na popula\xe7\xe3o."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"rate_clonal"}),": ",(0,s.jsx)(n.code,{children:"float"}),", padr\xe3o=10 - N\xfamero m\xe1ximo de clones poss\xedveis de uma c\xe9lula. Este valor \xe9 multiplicado pela afinidade da c\xe9lula para determinar o n\xfamero de clones."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"rate_hypermutation"}),": ",(0,s.jsx)(n.code,{children:"float"}),", padr\xe3o=0.75 - Taxa de clones mutados, usada como fator escalar."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"n_diversity_injection"}),": ",(0,s.jsx)(n.code,{children:"int"}),", padr\xe3o=5 - N\xfamero de novas c\xe9lulas de mem\xf3ria aleat\xf3rias injetadas para manter a diversidade."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"selection_size"}),": ",(0,s.jsx)(n.code,{children:"int"}),", padr\xe3o=5 - N\xfamero de melhores anticorpos selecionados para clonagem."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"affinity_function"}),": ",(0,s.jsx)(n.code,{children:"Optional[Callable[..., npt.NDArray]]"}),", padr\xe3o=None - Fun\xe7\xe3o objetivo usada para avaliar solu\xe7\xf5es candidatas."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"feature_type"}),": ",(0,s.jsx)(n.code,{children:"FeatureTypeAll"}),", padr\xe3o='ranged-features' - Tipo de amostra do problema, podendo ser ",(0,s.jsx)(n.code,{children:"'continuous-features'"}),", ",(0,s.jsx)(n.code,{children:"'binary-features'"}),", ",(0,s.jsx)(n.code,{children:"'ranged-features'"})," ou ",(0,s.jsx)(n.code,{children:"'permutation-features'"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"bounds"}),": ",(0,s.jsx)(n.code,{children:"Optional[Dict]"}),", padr\xe3o=None - Dicion\xe1rio definindo os limites de busca para problemas ",(0,s.jsx)(n.code,{children:"'ranged-features'"}),". Pode ser um \xfanico intervalo ou uma lista de intervalos para cada dimens\xe3o."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"mode"}),": ",(0,s.jsx)(n.code,{children:'Literal["min", "max"]'}),', padr\xe3o="min" - Especifica se o algoritmo minimiza ou maximiza a fun\xe7\xe3o de custo.']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"seed"}),": ",(0,s.jsx)(n.code,{children:"Optional[int]"}),", padr\xe3o=None - Semente para gera\xe7\xe3o de n\xfameros aleat\xf3rios."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"M\xe9todos-P\xfablicos",children:"M\xe9todos P\xfablicos"}),"\n",(0,s.jsxs)(n.h4,{id:"Fun\xe7\xe3o-optimize",children:["Fun\xe7\xe3o ",(0,s.jsx)(n.code,{children:"optimize(...)"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def optimize(self, max_iters: int = 50, n_iter_no_change=10, verbose: bool = True) -> npt.NDArray:\n"})}),"\n",(0,s.jsx)(n.p,{children:"Este m\xe9todo executa o processo de otimiza\xe7\xe3o e retorna a popula\xe7\xe3o de anticorpos."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Par\xe2metros de entrada:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"max_iters"}),": ",(0,s.jsx)(n.code,{children:"int"}),", padr\xe3o=50 - N\xfamero m\xe1ximo de intera\xe7\xf5es."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"n_iter_no_change"}),": ",(0,s.jsx)(n.code,{children:"int"}),", padr\xe3o=10 - N\xfamero m\xe1ximo de itera\xe7\xf5es sem melhoria na melhor solu\xe7\xe3o."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"verbose"}),": ",(0,s.jsx)(n.code,{children:"bool"}),", padr\xe3o=True - Flag para habilitar ou desabilitar sa\xedda detalhada durante o processo de otimiza\xe7\xe3o."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Retorna:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"npt.NDArray"}),": A popula\xe7\xe3o de anticorpos ap\xf3s a expans\xe3o clonal."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h4,{id:"Fun\xe7\xe3o-affinity_function",children:["Fun\xe7\xe3o ",(0,s.jsx)(n.code,{children:"affinity_function(...)"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def affinity_function(self, solution: npt.NDArray) -> np.float64:\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Este m\xe9todo avalia a afinidade de uma solu\xe7\xe3o candidata. Levanta ",(0,s.jsx)(n.code,{children:"NotImplementedError"})," se nenhuma fun\xe7\xe3o de afinidade tiver sido fornecida \xe0 inst\xe2ncia da classe."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Par\xe2metros de entrada:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"solution"}),": ",(0,s.jsx)(n.code,{children:"npt.NDArray"})," - Solu\xe7\xe3o candidata a ser avaliada."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Retorna:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"np.float64"}),": Valor de afinidade associado \xe0 solu\xe7\xe3o."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"M\xe9todos-Privados",children:"M\xe9todos Privados"}),"\n",(0,s.jsxs)(n.h4,{id:"Fun\xe7\xe3o-_select_top_antibodies",children:["Fun\xe7\xe3o ",(0,s.jsx)(n.code,{children:"_select_top_antibodies(...)"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def _select_top_antibodies(self, n: int, antibodies: list[tuple]) -> list[tuple]:\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Seleciona os ",(0,s.jsx)(n.code,{children:"n"})," melhores anticorpos com base em suas pontua\xe7\xf5es de afinidade, de acordo com o ",(0,s.jsx)(n.code,{children:"mode"})," (",(0,s.jsx)(n.code,{children:"'min'"})," ou ",(0,s.jsx)(n.code,{children:"'max'"}),")."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Par\xe2metros de entrada:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"n"}),": ",(0,s.jsx)(n.code,{children:"int"})," - N\xfamero de anticorpos a serem selecionados."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"antibodies"}),": ",(0,s.jsx)(n.code,{children:"list[tuple]"})," - Lista de tuplas, onde cada tupla representa um anticorpo e sua pontua\xe7\xe3o associada."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Retorna:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"list[tuple]"}),": Lista contendo os ",(0,s.jsx)(n.code,{children:"n"})," anticorpos selecionados."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h4,{id:"Fun\xe7\xe3o-_init_population_antibodies",children:["Fun\xe7\xe3o ",(0,s.jsx)(n.code,{children:"_init_population_antibodies(...)"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def _init_population_antibodies(self) -> npt.NDArray:\n"})}),"\n",(0,s.jsx)(n.p,{children:"Inicializa aleatoriamente a popula\xe7\xe3o inicial de anticorpos."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Retorna:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"npt.NDArray"}),": Lista com os anticorpos inicializados."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h4,{id:"Fun\xe7\xe3o-_diversity_introduction",children:["Fun\xe7\xe3o ",(0,s.jsx)(n.code,{children:"_diversity_introduction(...)"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def _diversity_introduction(self):\n"})}),"\n",(0,s.jsx)(n.p,{children:"Introduz novos anticorpos aleat\xf3rios na popula\xe7\xe3o para manter a diversidade gen\xe9tica e ajudar a evitar converg\xeancia prematura."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Retorna:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"npt.NDArray"}),": Array contendo os novos anticorpos aleat\xf3rios."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h4,{id:"Fun\xe7\xe3o-_clone_and_mutate",children:["Fun\xe7\xe3o ",(0,s.jsx)(n.code,{children:"_clone_and_mutate(...)"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def _clone_and_mutate(self, antibody: npt.NDArray, n_clone: int, rate_hypermutation: float) -> npt.NDArray:\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Gera clones mutados a partir de um \xfanico anticorpo. A estrat\xe9gia de muta\xe7\xe3o depende do ",(0,s.jsx)(n.code,{children:"feature_type"})," especificado durante a inicializa\xe7\xe3o (",(0,s.jsx)(n.code,{children:"'binary-features'"}),", ",(0,s.jsx)(n.code,{children:"'continuous-features'"}),", ",(0,s.jsx)(n.code,{children:"'ranged-features'"})," ou ",(0,s.jsx)(n.code,{children:"'permutation-features'"}),")."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Par\xe2metros de entrada:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"antibody"}),": ",(0,s.jsx)(n.code,{children:"npt.NDArray"})," - Vetor original do anticorpo a ser clonado e mutado."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"n_clone"}),": ",(0,s.jsx)(n.code,{children:"int"})," - N\xfamero de clones a serem gerados."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"rate_hypermutation"}),": ",(0,s.jsx)(n.code,{children:"float"})," - Taxa de hipermuta\xe7\xe3o."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Retorna:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"npt.NDArray"}),": Array contendo os clones mutados."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h4,{id:"Fun\xe7\xe3o-_clone_and_hypermutation",children:["Fun\xe7\xe3o ",(0,s.jsx)(n.code,{children:"_clone_and_hypermutation(...)"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def _clone_and_hypermutation(self, population: list[tuple]) -> list:\n"})}),"\n",(0,s.jsx)(n.p,{children:"Clona e aplica hipermuta\xe7\xe3o a uma popula\xe7\xe3o de anticorpos. Retorna uma lista de todos os clones e suas afinidades em rela\xe7\xe3o \xe0 fun\xe7\xe3o de custo."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Par\xe2metros de entrada:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"population"}),": ",(0,s.jsx)(n.code,{children:"list[tuple]"})," - Lista de anticorpos a serem avaliados e clonados."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Retorna:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"list"}),": Lista contendo os clones mutados."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h1,{id:"Refer\xeancias",children:"Refer\xeancias"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h5,{id:"1",children:"1"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["BROWNLEE, Jason. Clonal Selection Algorithm. Clever Algorithms: Nature-inspired Programming Recipes., 2011. Available at: ",(0,s.jsx)(n.a,{href:"https://cleveralgorithms.com/nature-inspired/immune/clonal_selection_algorithm.html",children:"https://cleveralgorithms.com/nature-inspired/immune/clonal_selection_algorithm.html"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>l});var i=o(6540);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);