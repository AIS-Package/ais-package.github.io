"use strict";(self.webpackChunkais_package_github_io=self.webpackChunkais_package_github_io||[]).push([[4111],{583:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"advanced-guides/Core/Negative Selection","title":"Sele\xe7\xe3o Negativa","description":"As fun\xe7\xf5es realizam verifica\xe7\xf5es de detectores e utilizam decoradores Numba para compila\xe7\xe3o Just-In-Time.","source":"@site/i18n/pt-br/docusaurus-plugin-content-docs/version-0.2.x/advanced-guides/Core/Negative Selection.md","sourceDirName":"advanced-guides/Core","slug":"/advanced-guides/Core/Negative Selection","permalink":"/pt-br/docs/advanced-guides/Core/Negative Selection","draft":false,"unlisted":false,"tags":[],"version":"0.2.x","lastUpdatedBy":"Jo\xe3o Paulo","lastUpdatedAt":1747440000000,"frontMatter":{"last_update":{"date":"2025/05/17","author":"Jo\xe3o Paulo"}},"sidebar":"docs","previous":{"title":"Sistema Imunol\xf3gico Artificial de Reconhecimento","permalink":"/pt-br/docs/advanced-guides/Base Classes Reference/csa/airs"},"next":{"title":"Metrics","permalink":"/pt-br/docs/advanced-guides/Utils/Metrics"}}');var r=s(4848),t=s(8453);const c={last_update:{date:"2025/05/17",author:"Jo\xe3o Paulo"}},i="Sele\xe7\xe3o Negativa",o={},d=[{value:"Fun\xe7\xe3o check_detector_bnsa_validity(...):",id:"fun\xe7\xe3o-check_detector_bnsa_validity",level:3},{value:"Fun\xe7\xe3o bnsa_class_prediction(...):",id:"fun\xe7\xe3o-bnsa_class_prediction",level:3},{value:"Fun\xe7\xe3o check_detector_rnsa_validity(...):",id:"fun\xe7\xe3o-check_detector_rnsa_validity",level:3}];function l(e){const a={code:"code",h1:"h1",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsx)(a.h1,{id:"sele\xe7\xe3o-negativa",children:"Sele\xe7\xe3o Negativa"})}),"\n",(0,r.jsx)(a.p,{children:"As fun\xe7\xf5es realizam verifica\xe7\xf5es de detectores e utilizam decoradores Numba para compila\xe7\xe3o Just-In-Time."}),"\n",(0,r.jsx)(a.h3,{id:"fun\xe7\xe3o-check_detector_bnsa_validity",children:"Fun\xe7\xe3o check_detector_bnsa_validity(...):"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:"def check_detector_bnsa_validity(\n    x_class: npt.NDArray,\n    vector_x: npt.NDArray,\n    aff_thresh: float\n) -> bool:\n"})}),"\n",(0,r.jsxs)(a.p,{children:["Verifica a validade de um candidato a detector (vector_x) contra amostras de uma classe (x_class) usando a dist\xe2ncia de Hamming. Um detector \xe9 considerado INV\xc1LIDO se a sua dist\xe2ncia para qualquer amostra em ",(0,r.jsx)(a.code,{children:"x_class"})," for menor ou igual a ",(0,r.jsx)(a.code,{children:"aff_thresh"}),"."]}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Os par\xe2metros de entrada s\xe3o:"})}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:["x_class (",(0,r.jsx)(a.code,{children:"npt.NDArray"}),"): Array contendo as amostras da classe. Formato esperado: (n_amostras, n_caracter\xedsticas)."]}),"\n",(0,r.jsxs)(a.li,{children:["vector_x (",(0,r.jsx)(a.code,{children:"npt.NDArray"}),"): Array representando o detector. Formato esperado: (n_caracter\xedsticas,)."]}),"\n",(0,r.jsxs)(a.li,{children:["aff_thresh (",(0,r.jsx)(a.code,{children:"float"}),"): Limiar de afinidade."]}),"\n"]}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Retorna:"})}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:"True se o detector for v\xe1lido, False caso contr\xe1rio."}),"\n"]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h3,{id:"fun\xe7\xe3o-bnsa_class_prediction",children:"Fun\xe7\xe3o bnsa_class_prediction(...):"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:"def bnsa_class_prediction(\n    features: npt.NDArray,\n    class_detectors: npt.NDArray,\n    aff_thresh: float\n) -> int:\n"})}),"\n",(0,r.jsx)(a.p,{children:"Define a classe de uma amostra a partir dos detectores n\xe3o-pr\xf3prios."}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Os par\xe2metros de entrada s\xe3o:"})}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:["features (",(0,r.jsx)(a.code,{children:"npt.NDArray"}),"): amostra bin\xe1ria a ser classificada (shape: [n_features])."]}),"\n",(0,r.jsxs)(a.li,{children:["class_detectors (",(0,r.jsx)(a.code,{children:"npt.NDArray"}),"): Matriz contendo os detectores de todas as classes (shape: [n_classes, n_detectors, n_features])."]}),"\n",(0,r.jsxs)(a.li,{children:["aff_thresh (",(0,r.jsx)(a.code,{children:"float"}),"): Limiar de afinidade que determina se um detector reconhece a amostra como n\xe3o-pr\xf3pria."]}),"\n"]}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Retorna:"})}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:"int: \xcdndice da classe predita. Retorna -1 se for n\xe3o-pr\xf3pria para todas as classes."}),"\n"]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h3,{id:"fun\xe7\xe3o-check_detector_rnsa_validity",children:"Fun\xe7\xe3o check_detector_rnsa_validity(...):"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:"def check_detector_rnsa_validity(\n    x_class: npt.NDArray,\n    vector_x: npt.NDArray,\n    threshold: float,\n    metric: int,\n    p: float\n) -> bool:\n"})}),"\n",(0,r.jsxs)(a.p,{children:["Verifica a validade de um candidato a detector (vector_x) contra amostras de uma classe (x_class) usando a dist\xe2ncia de Hamming. Um detector \xe9 considerado INV\xc1LIDO se a sua dist\xe2ncia para qualquer amostra em ",(0,r.jsx)(a.code,{children:"x_class"})," for menor ou igual a ",(0,r.jsx)(a.code,{children:"aff_thresh"}),"."]}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Os par\xe2metros de entrada s\xe3o:"})}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:["x_class (",(0,r.jsx)(a.code,{children:"npt.NDArray"}),"): Array contendo as amostras da classe. Formato esperado: (n_amostras, n_caracter\xedsticas)."]}),"\n",(0,r.jsxs)(a.li,{children:["vector_x (",(0,r.jsx)(a.code,{children:"npt.NDArray"}),"): Array representando o detector. Formato esperado: (n_caracter\xedsticas,)."]}),"\n",(0,r.jsxs)(a.li,{children:["threshold (",(0,r.jsx)(a.code,{children:"float"}),"): Afinidade."]}),"\n",(0,r.jsxs)(a.li,{children:["metric (",(0,r.jsx)(a.code,{children:"int"}),"): M\xe9trica de dist\xe2ncia a ser utilizada. Op\xe7\xf5es dispon\xedveis: [0 (Euclidean), 1 (Manhattan), 2 (Minkowski)]."]}),"\n",(0,r.jsxs)(a.li,{children:["p (",(0,r.jsx)(a.code,{children:"float"}),"): Par\xe2metro da m\xe9trica de Minkowski (utilizado apenas se ",(0,r.jsx)(a.code,{children:"metric"}),' for "minkowski").']}),"\n"]}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Retorna:"})}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:"True se o detector for v\xe1lido, False caso contr\xe1rio."}),"\n"]}),"\n",(0,r.jsx)(a.hr,{})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,a,s)=>{s.d(a,{R:()=>c,x:()=>i});var n=s(6540);const r={},t=n.createContext(r);function c(e){const a=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(t.Provider,{value:a},e.children)}}}]);