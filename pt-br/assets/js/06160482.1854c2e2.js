"use strict";(self.webpackChunkais_package_github_io=self.webpackChunkais_package_github_io||[]).push([[2886],{811:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>d,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"advanced-guides/base-module/Clusterer","title":"Base class for clustering algorithm.","description":"`BaseClusterer(ABC, Base)`","source":"@site/i18n/pt-br/docusaurus-plugin-content-docs/version-0.4.x/advanced-guides/base-module/Clusterer.md","sourceDirName":"advanced-guides/base-module","slug":"/advanced-guides/base-module/Clusterer","permalink":"/pt-br/docs/advanced-guides/base-module/Clusterer","draft":false,"unlisted":false,"tags":[],"version":"0.4.x","lastUpdatedBy":"Jo\xe3o Paulo","lastUpdatedAt":1759068822000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Base class for clustering algorithm.","sidebar_label":"BaseClusterer","lastUpdatedAt":"2025/08/19","author":"Jo\xe3o Paulo","keywords":["Base Clusterer","Clustering","Unsupervised Learning","BaseClusterer","Abstract Base Class","fit Method","predict Method","fit_predict Method","AiNet","Cluster Prediction","Python ML Classes"]},"sidebar":"docs","previous":{"title":"BaseClassifier","permalink":"/pt-br/docs/advanced-guides/base-module/Classifier"},"next":{"title":"Mutation","permalink":"/pt-br/docs/advanced-guides/base-module/Mutation"}}');var a=r(4848),t=r(8453);const d={sidebar_position:3,title:"Base class for clustering algorithm.",sidebar_label:"BaseClusterer",lastUpdatedAt:"2025/08/19",author:"Jo\xe3o Paulo",keywords:["Base Clusterer","Clustering","Unsupervised Learning","BaseClusterer","Abstract Base Class","fit Method","predict Method","fit_predict Method","AiNet","Cluster Prediction","Python ML Classes"]},i=void 0,o={},l=[{value:"<code>BaseClusterer(ABC, Base)</code>",id:"BaseClustererABC-Base",level:2},{value:"Fun\xe7\xe3o fit(...)",id:"Fun\xe7\xe3o-fit",level:3},{value:"Fun\xe7\xe3o predict(...)",id:"Fun\xe7\xe3o-predict",level:3},{value:"Fun\xe7\xe3o fit_predict(...)",id:"Fun\xe7\xe3o-fit_predict",level:3}];function c(e){const s={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h2,{id:"BaseClustererABC-Base",children:(0,a.jsx)(s.code,{children:"BaseClusterer(ABC, Base)"})}),"\n",(0,a.jsx)(s.p,{children:"Classe base abstrata para algoritmos de clustering."}),"\n",(0,a.jsxs)(s.p,{children:["Esta classe define a interface central para modelos de agrupamento. Ela exige\na implementa\xe7\xe3o dos m\xe9todos ",(0,a.jsx)(s.strong,{children:(0,a.jsx)(s.code,{children:"fit"})})," e ",(0,a.jsx)(s.strong,{children:(0,a.jsx)(s.code,{children:"predict"})})," em todas as classes derivadas,\ne fornece uma implementa\xe7\xe3o padr\xe3o para ",(0,a.jsx)(s.strong,{children:(0,a.jsx)(s.code,{children:"fit_predict"})})," e ",(0,a.jsx)(s.strong,{children:(0,a.jsx)(s.code,{children:"get_params"})}),"."]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h3,{id:"Fun\xe7\xe3o-fit",children:"Fun\xe7\xe3o fit(...)"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"def fit(self, X: npt.NDArray, verbose: bool = True) -> BaseClusterer\n"})}),"\n",(0,a.jsx)(s.p,{children:"Ajusta o modelo aos dados de treinamento.\nEste m\xe9todo abstrato deve ser implementado pelas subclasses."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Par\xe2metros"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"X"})}),": ",(0,a.jsx)(s.code,{children:"npt.NDArray"})," - Dados de entrada utilizados para treinar o modelo."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"verbose"})}),": ",(0,a.jsx)(s.code,{children:"bool"}),", default=True - Indica se a sa\xedda detalhada durante o treinamento deve ser exibida."]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Retorna"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"self"})}),": ",(0,a.jsx)(s.code,{children:"BaseClusterer"})," - Inst\xe2ncia da classe que implementa este m\xe9todo."]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Implementa\xe7\xe3o"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"/docs/aisp-techniques/immune-network-theory/ainet#Fun%C3%A7%C3%A3o-fit",children:"AiNet"})}),"\n"]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h3,{id:"Fun\xe7\xe3o-predict",children:"Fun\xe7\xe3o predict(...)"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"def predict(self, X: npt.NDArray) -> Optional[npt.NDArray]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Gera previs\xf5es com base nos dados de entrada.\nEste m\xe9todo abstrato deve ser implementado pelas subclasses."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Par\xe2metros"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"X"})}),": ",(0,a.jsx)(s.code,{children:"npt.NDArray"})," - Dados de entrada para os quais as previs\xf5es ser\xe3o geradas."]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Retorna"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"predictions"})}),": ",(0,a.jsx)(s.code,{children:"Optional[npt.NDArray]"})," - R\xf3tulos previstos dos clusters para cada amostra de entrada, ou ",(0,a.jsx)(s.code,{children:"None"})," caso a previs\xe3o n\xe3o seja poss\xedvel."]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Implementa\xe7\xe3o"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"/docs/aisp-techniques/immune-network-theory/ainet#Fun%C3%A7%C3%A3o-predict",children:"AiNet"})}),"\n"]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h3,{id:"Fun\xe7\xe3o-fit_predict",children:"Fun\xe7\xe3o fit_predict(...)"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"def fit_predict(self, X: npt.NDArray, verbose: bool = True) -> Optional[npt.NDArray]\n"})}),"\n",(0,a.jsxs)(s.p,{children:["M\xe9todo de conveni\xeancia que combina ",(0,a.jsx)(s.code,{children:"fit"})," e ",(0,a.jsx)(s.code,{children:"predict"})," em uma \xfanica chamada."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Par\xe2metros"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"X"})}),": ",(0,a.jsx)(s.code,{children:"npt.NDArray"})," - Dados de entrada para os quais as previs\xf5es ser\xe3o geradas."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"verbose"})}),": ",(0,a.jsx)(s.code,{children:"bool"}),", default=True - Indica se a sa\xedda detalhada durante o treinamento deve ser exibida."]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Retorna"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.em,{children:(0,a.jsx)(s.strong,{children:"predictions"})}),": ",(0,a.jsx)(s.code,{children:"Optional[npt.NDArray]"})," - R\xf3tulos previstos dos clusters para cada amostra de entrada, ou ",(0,a.jsx)(s.code,{children:"None"})," caso a previs\xe3o n\xe3o seja poss\xedvel."]}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>d,x:()=>i});var n=r(6540);const a={},t=n.createContext(a);function d(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);