"use strict";(self.webpackChunkais_package_github_io=self.webpackChunkais_package_github_io||[]).push([[3631],{4893:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>d,contentTitle:()=>t,default:()=>u,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"advanced-guides/base-module/Base","title":"Classe Base","description":"Classe base para compatibilidade com a API do scikit-learn.","source":"@site/i18n/pt-br/docusaurus-plugin-content-docs/version-0.3.x/advanced-guides/base-module/Base.md","sourceDirName":"advanced-guides/base-module","slug":"/advanced-guides/base-module/Base","permalink":"/pt-br/docs/advanced-guides/base-module/Base","draft":false,"unlisted":false,"tags":[],"version":"0.3.x","lastUpdatedBy":"Jo\xe3o Paulo","lastUpdatedAt":1756437399000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Classe Base","sidebar_label":"Base","lastUpdatedAt":"2025/08/19","author":"Jo\xe3o Paulo","keywords":["Classe Base","Modelo Base","Compatibilidade com Scikit-learn","get_params","set_params","Semente Aleat\xf3ria","Classes Python"]},"sidebar":"docs","previous":{"title":"Advanced Guides","permalink":"/pt-br/docs/category/advanced-guides"},"next":{"title":"BaseClassifier","permalink":"/pt-br/docs/advanced-guides/base-module/Classifier"}}');var i=a(4848),o=a(8453);const r={sidebar_position:1,title:"Classe Base",sidebar_label:"Base",lastUpdatedAt:"2025/08/19",author:"Jo\xe3o Paulo",keywords:["Classe Base","Modelo Base","Compatibilidade com Scikit-learn","get_params","set_params","Semente Aleat\xf3ria","Classes Python"]},t=void 0,d={},l=[{value:"Fun\xe7\xe3o set_params(...)",id:"fun\xe7\xe3o-set_params",level:3},{value:"Fun\xe7\xe3o get_params(...)",id:"fun\xe7\xe3o-get_params",level:3},{value:"Fun\xe7\xf5es utilit\xe1rias",id:"fun\xe7\xf5es-utilit\xe1rias",level:2},{value:"Fun\xe7\xe3o set_seed_numba(...)",id:"fun\xe7\xe3o-set_seed_numba",level:3}];function c(e){const s={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.p,{children:"Classe base para compatibilidade com a API do scikit-learn."}),"\n",(0,i.jsxs)(s.p,{children:["Fornece os m\xe9todos ",(0,i.jsx)(s.code,{children:"get_params"})," e ",(0,i.jsx)(s.code,{children:"set_params"})," para compatibilidade com a API do scikit-learn, permitindo acesso aos par\xe2metros p\xfablicos do modelo."]}),"\n",(0,i.jsx)(s.h3,{id:"fun\xe7\xe3o-set_params",children:"Fun\xe7\xe3o set_params(...)"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def set_params(self, **params)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Define os par\xe2metros da inst\xe2ncia. Garante compatibilidade com fun\xe7\xf5es do scikit-learn."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Par\xe2metros"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"params"}),': dict - Dicion\xe1rio de par\xe2metros que ser\xe3o definidos como atributos da inst\xe2ncia. Apenas atributos p\xfablicos (que n\xe3o come\xe7am com "_") s\xe3o modificados.']}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Retorno"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["self: ",(0,i.jsx)(s.code,{children:"Base"})," - Retorna a pr\xf3pria inst\xe2ncia ap\xf3s definir os par\xe2metros."]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"fun\xe7\xe3o-get_params",children:"Fun\xe7\xe3o get_params(...)"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def get_params(self, deep: bool = True) -> dict\n"})}),"\n",(0,i.jsx)(s.p,{children:"Retorna um dicion\xe1rio com os principais par\xe2metros do objeto. Garante compatibilidade com fun\xe7\xf5es do scikit-learn."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Par\xe2metros"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"deep"}),": ",(0,i.jsx)(s.code,{children:"bool"})," (padr\xe3o=True) - Ignorado nesta implementa\xe7\xe3o, mas inclu\xeddo para compatibilidade com scikit-learn."]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Retorno"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["params: ",(0,i.jsx)(s.code,{children:"dict"}),' - Dicion\xe1rio contendo os atributos do objeto que n\xe3o come\xe7am com "_".']}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"fun\xe7\xf5es-utilit\xe1rias",children:"Fun\xe7\xf5es utilit\xe1rias"}),"\n",(0,i.jsx)(s.h3,{id:"fun\xe7\xe3o-set_seed_numba",children:"Fun\xe7\xe3o set_seed_numba(...)"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"@njit(cache=True)\ndef set_seed_numba(seed: int)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Define a semente para n\xfameros aleat\xf3rios usados por fun\xe7\xf5es compiladas com Numba."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Par\xe2metros"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"seed"}),": ",(0,i.jsx)(s.code,{children:"int"})," - Valor inteiro usado para inicializar o gerador de n\xfameros aleat\xf3rios do Numba."]}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,s,a)=>{a.d(s,{R:()=>r,x:()=>t});var n=a(6540);const i={},o=n.createContext(i);function r(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);