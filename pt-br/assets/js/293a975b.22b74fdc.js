"use strict";(self.webpackChunkais_project_github_io=self.webpackChunkais_project_github_io||[]).push([[387],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>f});var n=t(7294);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){s(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,s=function(e,a){if(null==e)return{};var t,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=n.createContext({}),p=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},d=function(e){var a=p(e.components);return n.createElement(l.Provider,{value:a},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=p(t),u=s,f=c["".concat(l,".").concat(u)]||c[u]||m[u]||r;return t?n.createElement(f,o(o({ref:a},d),{},{components:t})):n.createElement(f,o({ref:a},d))}));function f(e,a){var t=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var r=t.length,o=new Array(r);o[0]=u;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i[c]="string"==typeof e?e:s,o[1]=i;for(var p=2;p<r;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9459:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var n=t(7462),s=(t(7294),t(3905));const r={sidebar_position:1,title:"Usando o BNSA",sidebar_label:"Usando o BNSA",lastUpdatedAt:"2023/06/01",author:"Jo\xe3o Paulo",showLastUpdateAuthor:!0,showLastUpdateTime:!0,last_update:{date:"2023/06/01",author:"Jo\xe3o Paulo"}},o="Aplicando o BNSA",i={unversionedId:"Getting Started/basic use/BNSA",id:"Getting Started/basic use/BNSA",title:"Usando o BNSA",description:"O presente exemplo, dispon\xedvel aqui, visa demonstrar a aplica\xe7\xe3o do algoritmo de sele\xe7\xe3o negativa bin\xe1ria. Esse algoritmo \xe9 empregado na classifica\xe7\xe3o de amostras com caracter\xedsticas discretas.",source:"@site/i18n/pt-br/docusaurus-plugin-content-docs/current/Getting Started/basic use/BNSA.md",sourceDirName:"Getting Started/basic use",slug:"/Getting Started/basic use/BNSA",permalink:"/pt-br/docs/Getting Started/basic use/BNSA",draft:!1,tags:[],version:"current",lastUpdatedBy:"Jo\xe3o Paulo",lastUpdatedAt:1685577600,formattedLastUpdatedAt:"1 de jun. de 2023",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Usando o BNSA",sidebar_label:"Usando o BNSA",lastUpdatedAt:"2023/06/01",author:"Jo\xe3o Paulo",showLastUpdateAuthor:!0,showLastUpdateTime:!0,last_update:{date:"2023/06/01",author:"Jo\xe3o Paulo"}},sidebar:"tutorialSidebar",previous:{title:"Instala\xe7\xe3o",permalink:"/pt-br/docs/Getting Started/instalation"},next:{title:"Usando o RNSA",permalink:"/pt-br/docs/Getting Started/basic use/RNSA"}},l={},p=[{value:"Importando o algoritmo BNSA",id:"importando-o-algoritmo-bnsa",level:2},{value:"Gerando amostras",id:"gerando-amostras",level:2},{value:"Treinamento:",id:"treinamento",level:2},{value:"Avalia\xe7\xe3o",id:"avalia\xe7\xe3o",level:2}],d={toc:p},c="wrapper";function m(e){let{components:a,...r}=e;return(0,s.kt)(c,(0,n.Z)({},d,r,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"aplicando-o-bnsa"},"Aplicando o BNSA"),(0,s.kt)("p",null,"O presente exemplo, dispon\xedvel aqui, visa demonstrar a aplica\xe7\xe3o do algoritmo de sele\xe7\xe3o negativa bin\xe1ria. Esse algoritmo \xe9 empregado na classifica\xe7\xe3o de amostras com caracter\xedsticas discretas. "),(0,s.kt)("p",null,"Acesse o notebook Jupyter dispon\xedvel ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/AIS-Package/aisp/blob/main/examples/BNSA/example_with_randomly_generated_dataset-pt.ipynb"},"aqui"),"!"),(0,s.kt)("h2",{id:"importando-o-algoritmo-bnsa"},"Importando o algoritmo BNSA"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"from aisp.NSA import BNSA\n")),(0,s.kt)("h2",{id:"gerando-amostras"},"Gerando amostras"),(0,s.kt)("p",null,"O treinamento e teste do algoritmo precisa de amostras de dados. Assim, para a demonstra\xe7\xe3o, foram geradas duas classes aleat\xf3rias, empregando a fun\xe7\xe3o a seguir:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\nfrom scipy.spatial.distance import cdist\n# Essa fun\xe7\xe3o gera amostras com similaridades acima de um limiar de semelhan\xe7a.\ndef generate_samples(n_samples: int, n_features: int, s: float, x: None):\n  classe_samples = []\n  while len(classe_samples) < n_samples:\n    similarity = 0\n    sample_rand = np.random.randint(0, 2, size=(n_features))\n    if(len(classe_samples) > max(int(n_samples * 0.1), 1)):\n      similarity = cdist(classe_samples, np.expand_dims(sample_rand, axis=0), metric='hamming')[0, :]\n      if x is not None:\n        if similarity[0] <= s and not np.any(np.all(sample_rand == x, axis=1)):\n          classe_samples.append(sample_rand)\n      elif similarity[0] <= s:\n        classe_samples.append(sample_rand)\n    else:\n      classe_samples.append(sample_rand)\n  return np.array(classe_samples)\n")),(0,s.kt)("hr",null),(0,s.kt)("p",null,"Cada classe contar\xe1 com 500 amostras, sendo a similaridade m\xednima entre amostras de 80% (s = 0.2). Essas classes ser\xe3o separadas em conjunto de treinamento (800 amostras) e de teste (200 amostras). "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'# Configurando a seed para 121 para garantir a reprodutibilidade dos dados gerados.\nnp.random.seed(121)\n# Gerando amostras para a classe "x".\nx = generate_samples(500, 20, 0.2, None)\n# Gerando amostras exclusivas para a classe "y", diferentes das amostras presentes na classe "x".\ny = generate_samples(500, 20, 0.2, x)\n# Adicionando colunas contendo as sa\xeddas (r\xf3tulos) das classes "x" e "y".\nx = np.hstack((x, np.full((x.shape[0], 1), \'x\')))\ny = np.hstack((y, np.full((y.shape[0], 1), \'y\')))\n# Juntando os dois vetores (classes "x" e "y") e randomizando a ordem das amostras.\nindex = np.random.permutation(x.shape[0]*2)\ndataset = np.vstack((x, y))[index]\n\n# Separando as caracter\xedsticas (inputs) e as classes de sa\xedda (r\xf3tulos).\nsamples = dataset[:, :-1].astype(int)\noutput = dataset[:, -1]\n# Separando as amostras de treinamento e teste\ntrain_x, test_x, train_y, test_y = train_test_split(samples, output, test_size=0.2, random_state=1234321)\n\n')),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"treinamento"},"Treinamento:"),(0,s.kt)("p",null,"O modelo \xe9 ajustado atrav\xe9s dos padr\xf5es de treinamento. Nessa aplica\xe7\xe3o, a sele\xe7\xe3o negativa distribuir\xe1, com taxa de diferencia\xe7\xe3o de 30%, 250 detectores pelo espa\xe7o de entradas."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'# Iniciando p modelo.\nnsa = BNSA(N=250, aff_thresh=0.30, seed=1234321, max_discards=10000)\n# Efetuando o treinamento: \nnsa.fit(X=train_x, y=train_y)\n# Efetuando a previs\xe3o:: \nprev = nsa.predict(X=test_x)\n# Mostrando a acur\xe1cia das previs\xf5es para os dados reais.\nprint(f"A acur\xe1cia \xe9 {accuracy_score(prev, test_y)}")\nprint(classification_report(test_y, prev))\n')),(0,s.kt)("p",null,"Output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"\u2714 Non-self detectors for classes (x, y) successfully generated:  \u2507\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2507 500/500 detectors\nA acur\xe1cia \xe9 0.93\n              precision    recall  f1-score   support\n\n           x       0.93      0.91      0.92        90\n           y       0.93      0.95      0.94       110\n\n    accuracy                           0.93       200\n   macro avg       0.93      0.93      0.93       200\nweighted avg       0.93      0.93      0.93       200\n")),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"avalia\xe7\xe3o"},"Avalia\xe7\xe3o"),(0,s.kt)("p",null,"O modelo obteve 0,93 de acur\xe1cia para o conjunto teste. A precis\xe3o na classifica\xe7\xe3o, tanto para x quanto para y, tamb\xe9m foi de 0,93. Isso pode ser observado pela matriz de confus\xe3o na Figura 1."),(0,s.kt)("p",null,(0,s.kt)("img",{src:t(1214).Z,width:"447",height:"447"})))}m.isMDXComponent=!0},1214:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/matrizBNSA-4b9a2c1be08ba849c0b96119666ae719.png"}}]);