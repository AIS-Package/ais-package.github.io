"use strict";(self.webpackChunkais_package_github_io=self.webpackChunkais_package_github_io||[]).push([[8035],{8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>t});var r=s(6540);const l={},i=r.createContext(l);function d(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),r.createElement(i.Provider,{value:n},e.children)}},9181:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"advanced-guides/Utils/Display","title":"Display","description":"Utility Functions for Displaying Algorithm Information","source":"@site/versioned_docs/version-0.4.x/advanced-guides/Utils/Display.md","sourceDirName":"advanced-guides/Utils","slug":"/advanced-guides/Utils/Display","permalink":"/docs/advanced-guides/Utils/Display","draft":false,"unlisted":false,"tags":[],"version":"0.4.x","lastUpdatedBy":"Jo\xe3o Paulo","lastUpdatedAt":1758597438000,"frontMatter":{},"sidebar":"docs","previous":{"title":"Multiclass","permalink":"/docs/advanced-guides/Utils/Multiclass"},"next":{"title":"Distance","permalink":"/docs/advanced-guides/Utils/Distance"}}');var l=s(4848),i=s(8453);const d={},t="Display",a={},o=[{value:"def _supports_box_drawing()",id:"def-_supports_box_drawing",level:2},{value:"class TableFormatter",id:"class-tableformatter",level:2},{value:"def _border(left, middle, right, line, new_line=True)",id:"def-_borderleft-middle-right-line-new_linetrue",level:3},{value:"def get_header()",id:"def-get_header",level:3},{value:"def get_row(values)",id:"def-get_rowvalues",level:3},{value:"def get_bottom(new_line=False)",id:"def-get_bottomnew_linefalse",level:3},{value:"class ProgressTable(TableFormatter)",id:"class-progresstabletableformatter",level:2},{value:"def _print_header()",id:"def-_print_header",level:3},{value:"def update(values)",id:"def-updatevalues",level:3},{value:"def finish()",id:"def-finish",level:3}];function c(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"display",children:"Display"})}),"\n",(0,l.jsx)(n.p,{children:"Utility Functions for Displaying Algorithm Information"}),"\n",(0,l.jsx)(n.h2,{id:"def-_supports_box_drawing",children:"def _supports_box_drawing()"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"def _supports_box_drawing() -> bool\n"})}),"\n",(0,l.jsx)(n.p,{children:"Function to check if the terminal supports boxed characters."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"bool"})})," (",(0,l.jsx)(n.code,{children:"bool"}),"): True if the terminal likely supports boxed characters, False otherwise."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"class-tableformatter",children:"class TableFormatter"}),"\n",(0,l.jsx)(n.p,{children:"Class to format tabular data into strings for display in the console."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"headers"})})," (",(0,l.jsx)(n.code,{children:"Mapping[str, int]"}),"): Mapping of column names to their respective widths, in the format ",(0,l.jsx)(n.code,{children:"{column_name: column_width}"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Raises"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"ValueError"}),": If ",(0,l.jsx)(n.code,{children:"headers"})," is empty or not a valid mapping."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"def-_borderleft-middle-right-line-new_linetrue",children:"def _border(left, middle, right, line, new_line=True)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"def _border(self, left: str, middle: str, right: str, line: str, new_line: bool = True) -> str\n"})}),"\n",(0,l.jsx)(n.p,{children:"Create a horizontal border for the table."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"left"})})," (",(0,l.jsx)(n.code,{children:"str"}),"): Character on the left side of the border."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"middle"})})," (",(0,l.jsx)(n.code,{children:"str"}),"): Character separator between columns."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"right"})})," (",(0,l.jsx)(n.code,{children:"str"}),"): Character on the right side of the border."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"line"})})," (",(0,l.jsx)(n.code,{children:"str"}),"): Character used to fill the border."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"new_line"})})," (",(0,l.jsx)(n.code,{children:"bool"}),", optional): If True, adds a line break before the border (default is True)."]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"border"})})," (",(0,l.jsx)(n.code,{children:"str"}),"): String representing the horizontal border."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"def-get_header",children:"def get_header()"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"def get_header(self) -> str\n"})}),"\n",(0,l.jsx)(n.p,{children:"Generate the table header, including the top border, column headings, and separator line."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"header"})})," (",(0,l.jsx)(n.code,{children:"str"}),"): Formatted string of the table header."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"def-get_rowvalues",children:"def get_row(values)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"def get_row(self, values: Mapping[str, Union[str, int, float]]) -> str\n"})}),"\n",(0,l.jsx)(n.p,{children:"Generate a formatted row for the table data."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"values"})})," (",(0,l.jsx)(n.code,{children:"Mapping[str, Union[str, int, float]]"}),"): Dictionary with values for each column, in the format ",(0,l.jsx)(n.code,{children:"{column_name: value}"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"row"})})," (",(0,l.jsx)(n.code,{children:"str"}),"): Formatted string of the table row."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"def-get_bottomnew_linefalse",children:"def get_bottom(new_line=False)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"def get_bottom(self, new_line: bool = False) -> str\n"})}),"\n",(0,l.jsx)(n.p,{children:"Generate the table's bottom border."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"new_line"})})," (",(0,l.jsx)(n.code,{children:"bool"}),", optional): If True, adds a line break before the border (default is False)."]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"bottom"})})," (",(0,l.jsx)(n.code,{children:"str"}),"): Formatted string for the bottom border."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"class-progresstabletableformatter",children:"class ProgressTable(TableFormatter)"}),"\n",(0,l.jsx)(n.p,{children:"Class to display a formatted table in the console to track the algorithm's progress."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"headers"})})," (",(0,l.jsx)(n.code,{children:"Mapping[str, int]"}),"): Mapping ",(0,l.jsx)(n.code,{children:"{column_name: column_width}"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"verbose"})})," (",(0,l.jsx)(n.code,{children:"bool"}),"): If False, prints nothing to the terminal."]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Raises"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"ValueError"}),": If ",(0,l.jsx)(n.code,{children:"headers"})," is empty or not a valid mapping."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"def-_print_header",children:"def _print_header()"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"def _print_header(self) -> None\n"})}),"\n",(0,l.jsx)(n.p,{children:"Print the table header."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"def-updatevalues",children:"def update(values)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"def update(self, values: Mapping[str, Union[str, int, float]]) -> None\n"})}),"\n",(0,l.jsx)(n.p,{children:"Add a new row of values to the table."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"values"})})," (",(0,l.jsx)(n.code,{children:"Mapping[str, Union[str, int, float]]"}),"): Keys must match the columns defined in headers."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"def-finish",children:"def finish()"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"def finish(self) -> None\n"})}),"\n",(0,l.jsx)(n.p,{children:"End the table display, printing the bottom border and total time."}),"\n",(0,l.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}}}]);