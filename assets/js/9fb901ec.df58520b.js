"use strict";(self.webpackChunkais_project_github_io=self.webpackChunkais_project_github_io||[]).push([[675],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,m=u["".concat(s,".").concat(d)]||u[d]||h[d]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6779:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1},i="Negative selection",l={unversionedId:"aisp-techniques/Negative Selection/README",id:"aisp-techniques/Negative Selection/README",title:"Negative selection",description:"Negative selection is the process in which the immune system maturates T-cells, also known as T-lymphocytes, which make them capable of detecting non-self. Thus, the Negative Selection Algorithm (NSA) uses hyperspheres symbolizing the detectors in an N-dimensional data space. [1]",source:"@site/docs/aisp-techniques/Negative Selection/README.md",sourceDirName:"aisp-techniques/Negative Selection",slug:"/aisp-techniques/Negative Selection/",permalink:"/docs/aisp-techniques/Negative Selection/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Implemented techniques",permalink:"/docs/aisp-techniques/"},next:{title:"RNSA - Real-Valued Negative Selection Algorithm",permalink:"/docs/aisp-techniques/Negative Selection/rnsa"}},s={},c=[{value:"1",id:"1",level:5},{value:"2",id:"2",level:5},{value:"3",id:"3",level:5}],p={toc:c},u="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"negative-selection"},"Negative selection"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Negative selection")," is the process in which the immune system maturates T-cells, also known as T-lymphocytes, which make them capable of detecting non-self. Thus, the Negative Selection Algorithm (NSA) uses hyperspheres symbolizing the detectors in an N-dimensional data space. ",(0,a.kt)("a",{parentName:"p",href:"#1"},"[1]")),(0,a.kt)("h1",{id:"classes"},"classes"),(0,a.kt)("blockquote",null,(0,a.kt)("ol",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/docs/aisp-techniques/Negative%20Selection/bnsa"},"Binary version:")),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"The binary algorithm adapted for multiple classes in this project is based on the version proposed by ",(0,a.kt)("a",{parentName:"p",href:"#2"},"Forrest et al. (1994)"),", originally developed for computer security."))))),(0,a.kt)("blockquote",null,(0,a.kt)("ol",{parentName:"blockquote",start:2},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/docs/aisp-techniques/Negative%20Selection/rnsa"},"Real-Valued version:")),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"This algorithm has two different versions: one based on the canonical version ",(0,a.kt)("a",{parentName:"p",href:"#1"},"[1]")," and another with variable radius detectors ",(0,a.kt)("a",{parentName:"p",href:"#3"},"[3]"),". Both are adapted to work with multiple classes and have methods for predicting data present in the non-self region of all detectors and classes."))))),(0,a.kt)("h1",{id:"references"},"References"),(0,a.kt)("hr",null),(0,a.kt)("h5",{id:"1"},"1"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"BRABAZON, Anthony; O\u2019NEILL, Michael; MCGARRAGHY, Se\xe1n. Natural Computing Algorithms. ","[S. l.]",": Springer Berlin Heidelberg, 2015. DOI 10.1007/978-3-662-43631-8. Dispon\xedvel em: ",(0,a.kt)("a",{parentName:"p",href:"http://dx.doi.org/10.1007/978-3-662-43631-8"},"http://dx.doi.org/10.1007/978-3-662-43631-8"),".")),(0,a.kt)("h5",{id:"2"},"2"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},'S. Forrest, A. S. Perelson, L. Allen and R. Cherukuri, "Self-nonself discrimination in a computer," Proceedings of 1994 IEEE Computer Society Symposium on Research in Security and Privacy, Oakland, CA, USA, 1994, pp. 202-212, doi: ',(0,a.kt)("a",{parentName:"p",href:"http://dx.doi.org/10.1109/RISP.1994.296580"},"http://dx.doi.org/10.1109/RISP.1994.296580"),".")),(0,a.kt)("h5",{id:"3"},"3"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"JI, Zhou; DASGUPTA, Dipankar. Real-Valued Negative Selection Algorithm with Variable-Sized Detectors. Genetic and Evolutionary Computation \u2013 GECCO 2004. ","[S. l.]",": Springer Berlin Heidelberg, 2004. DOI 10.1007/978-3-540-24854-5_30. Dispon\xedvel em: ",(0,a.kt)("a",{parentName:"p",href:"http://dx.doi.org/10.1007/978-3-540-24854-5_30"},"http://dx.doi.org/10.1007/978-3-540-24854-5_30"),".")),(0,a.kt)("hr",null))}h.isMDXComponent=!0}}]);