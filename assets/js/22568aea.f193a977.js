"use strict";(self.webpackChunkais_package_github_io=self.webpackChunkais_package_github_io||[]).push([[3009],{7175:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"advanced-guides/Utils/Validation","title":"Validation","description":"def detectvectordata_type(...)","source":"@site/versioned_docs/version-0.2.x/advanced-guides/Utils/Validation.md","sourceDirName":"advanced-guides/Utils","slug":"/advanced-guides/Utils/Validation","permalink":"/docs/0.2.x/advanced-guides/Utils/Validation","draft":false,"unlisted":false,"tags":[],"version":"0.2.x","lastUpdatedBy":"Jo\xe3o Paulo","lastUpdatedAt":1758597438000,"frontMatter":{},"sidebar":"docs","previous":{"title":"Sanitizers","permalink":"/docs/0.2.x/advanced-guides/Utils/Sanitizers"},"next":{"title":"About us","permalink":"/docs/0.2.x/About us"}}');var i=n(4848),d=n(8453);const a={},r="Validation",c={},o=[{value:"def detect_vector_data_type(...)",id:"def-detect_vector_data_type",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"validation",children:"Validation"})}),"\n",(0,i.jsx)(t.h2,{id:"def-detect_vector_data_type",children:"def detect_vector_data_type(...)"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"def detect_vector_data_type(\n    vector: npt.NDArray\n) -> FeatureType:\n"})}),"\n",(0,i.jsx)(t.p,{children:"Detects the type of data in a given vector."}),"\n",(0,i.jsx)(t.p,{children:"This function analyzes the input vector and classifies its data as one of the supported types:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"binary"}),": Boolean values (",(0,i.jsx)(t.code,{children:"True"}),"/",(0,i.jsx)(t.code,{children:"False"}),") or integer ",(0,i.jsx)(t.code,{children:"0"}),"/",(0,i.jsx)(t.code,{children:"1"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"continuous"}),": Float values within the normalized range ",(0,i.jsx)(t.code,{children:"[0.0, 1.0]"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"ranged"}),": Float values outside the normalized range."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"vector"})," (",(0,i.jsx)(t.code,{children:"npt.NDArray"}),"): An array containing the data to be classified."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"FeatureType"})," (",(0,i.jsx)(t.code,{children:'Literal["binary-features", "continuous-features", "ranged-features"]'}),"): The detected type of data in the vector."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Raises"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"UnsupportedDataTypeError"}),": Raised if the vector contains an unsupported data type."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var s=n(6540);const i={},d=s.createContext(i);function a(e){const t=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(d.Provider,{value:t},e.children)}}}]);