"use strict";(self.webpackChunkais_package_github_io=self.webpackChunkais_package_github_io||[]).push([[9967],{1811:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/exemple_airs_plot-74ee8b3ceba7884ea7a965b8ee49a525.png"},1944:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"getting-started/basic-use/AIRS","title":"Using the AIRS","description":"Access the Jupyter notebook with the code available here!","source":"@site/versioned_docs/version-0.3.x/getting-started/basic-use/AIRS.md","sourceDirName":"getting-started/basic-use","slug":"/getting-started/basic-use/AIRS","permalink":"/docs/0.3.x/getting-started/basic-use/AIRS","draft":false,"unlisted":false,"tags":[],"version":"0.3.x","lastUpdatedBy":"Jo\xe3o Paulo","lastUpdatedAt":1747440000000,"frontMatter":{"title":"Using the AIRS","sidebar_label":"Using the AIRS","lastUpdatedAt":"2025/05/17","author":"Jo\xe3o Paulo","showLastUpdateAuthor":true,"showLastUpdateTime":true,"last_update":{"date":"2025/05/17","author":"Jo\xe3o Paulo"},"keywords":["Clonal Selection Algorithm","CSA","Artificial Immune System","AIS","AIRS","Binary Algorithm","NSA","immune-inspired algorithms","machine learning","classification","anomaly detection","mushrooms dataset","iris dataset","geyser dataset","real-valued detectors","immune recognition"]},"sidebar":"docs","previous":{"title":"Installation","permalink":"/docs/0.3.x/getting-started/instalation"},"next":{"title":"Using the AiNet","permalink":"/docs/0.3.x/getting-started/basic-use/AiNet"}}');var a=n(4848),i=n(8453);const r={title:"Using the AIRS",sidebar_label:"Using the AIRS",lastUpdatedAt:"2025/05/17",author:"Jo\xe3o Paulo",showLastUpdateAuthor:!0,showLastUpdateTime:!0,last_update:{date:"2025/05/17",author:"Jo\xe3o Paulo"},keywords:["Clonal Selection Algorithm","CSA","Artificial Immune System","AIS","AIRS","Binary Algorithm","NSA","immune-inspired algorithms","machine learning","classification","anomaly detection","mushrooms dataset","iris dataset","geyser dataset","real-valued detectors","immune recognition"]},o=void 0,l={},c=[{value:"Importing the Artificial Immune Recognition System",id:"importing-the-artificial-immune-recognition-system",level:3},{value:"Generating dice bubbles for classes randomly.",id:"generating-dice-bubbles-for-classes-randomly",level:3},{value:"Testing the model AIRS:",id:"testing-the-model-airs",level:3},{value:"Memory cell and sample plotting:",id:"memory-cell-and-sample-plotting",level:3}];function d(e){const t={a:"a",code:"code",h3:"h3",hr:"hr",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["Access the Jupyter notebook with the code available ",(0,a.jsx)(t.a,{href:"https://github.com/AIS-Package/aisp/blob/main/examples/en/classification/AIRS/example_with_randomly_generated_dataset-en.ipynb",children:"here"}),"!"]}),"\n",(0,a.jsxs)(t.p,{children:["Run notebook online via Binder: ",(0,a.jsx)(t.a,{href:"https://mybinder.org/v2/gh/AIS-Package/aisp/HEAD?labpath=%2Fexamples%2Fen%2Fclassification%2FAIRS%2Fexample_with_randomly_generated_dataset-en.ipynb",children:(0,a.jsx)(t.img,{src:"https://mybinder.org/badge_logo.svg",alt:"Binder"})})]}),"\n",(0,a.jsx)(t.h3,{id:"importing-the-artificial-immune-recognition-system",children:"Importing the Artificial Immune Recognition System"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"from aisp.csa import AIRS\n"})}),"\n",(0,a.jsx)(t.h3,{id:"generating-dice-bubbles-for-classes-randomly",children:"Generating dice bubbles for classes randomly."}),"\n",(0,a.jsxs)(t.p,{children:["Using the ",(0,a.jsx)(t.code,{children:"make_blobs"})," function, two sets of data are generated in the form of bubbles, in the range between 0 and 1, representing each class x and y. Then this data is separated into test and training sets."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"from sklearn.datasets import make_blobs\nfrom sklearn.model_selection import train_test_split\n\n# Generating the samples and outputs for the training.\nsamples, output = make_blobs(n_samples=500 , n_features=2, cluster_std=0.07, center_box=([0.0, 1.0]), centers=[[0.25, 0.75], [0.75, 0.25]], random_state=1234) \n# Separating data for training and testing.\ntrain_x, test_x, train_y, test_y = train_test_split(samples, output, test_size=0.2)\n"})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"testing-the-model-airs",children:"Testing the model AIRS:"}),"\n",(0,a.jsx)(t.p,{children:"Then, it presents the result of the forecast accuracy."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'from sklearn.metrics import confusion_matrix, classification_report, accuracy_score\n\n# Starting the class.\nairs = AIRS(seed=1234)\n# Carrying out the training:\nairs.fit(X=train_x, y=train_y)\n# Previewing classes with test samples.\nprev_y = airs.predict(test_x)\n# Showing the accuracy of predictions for data.\nprint(f"The accuracy is {accuracy_score(prev_y, test_y)}")\nprint(classification_report(test_y, prev_y))\n'})}),"\n",(0,a.jsx)(t.p,{children:"Output:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"\u2714 Set of memory cells for classes (0, 1) successfully generated:  \u2507\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2507 400/400 memory cells for each a\u1d62\nThe accuracy is 1.0\n              precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        51\n           1       1.00      1.00      1.00        49\n\n    accuracy                           1.00       100\n   macro avg       1.00      1.00      1.00       100\nweighted avg       1.00      1.00      1.00       100\n"})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"memory-cell-and-sample-plotting",children:"Memory cell and sample plotting:"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:n(1811).A+"",width:"1302",height:"640"})})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(6540);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);