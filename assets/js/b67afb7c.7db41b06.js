"use strict";(self.webpackChunkais_package_github_io=self.webpackChunkais_package_github_io||[]).push([[6301],{2302:(s,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>o,frontMatter:()=>a,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"aisp-techniques/Clonal Selection Algorithms/airs/README","title":"AIRS - Artificial Immune Recognition System","description":"The `AIRS` class aims to perform classification using metaphors of selection and clonal expansion.","source":"@site/versioned_docs/version-0.2.x/aisp-techniques/Clonal Selection Algorithms/airs/README.md","sourceDirName":"aisp-techniques/Clonal Selection Algorithms/airs","slug":"/aisp-techniques/Clonal Selection Algorithms/airs/","permalink":"/docs/aisp-techniques/Clonal Selection Algorithms/airs/","draft":false,"unlisted":false,"tags":[],"version":"0.2.x","lastUpdatedBy":"Jo\xe3o Paulo","lastUpdatedAt":1748204086000,"sidebarPosition":1,"frontMatter":{"sidebar_label":"AIRS - Artificial Immune Recognition System","sidebar_position":1,"keywords":["Binary","classifying","affinity threshold","Real-Valued","classifying","anomalies","K-Nearest Neighbors"],"lastUpdatedAt":"2025/05/25","author":"Jo\xe3o Paulo"},"sidebar":"docs","previous":{"title":"Clonal Selection Algorithm.","permalink":"/docs/aisp-techniques/Clonal Selection Algorithms/"},"next":{"title":"ABR - Artificial Recognition Ball","permalink":"/docs/aisp-techniques/Clonal Selection Algorithms/airs/abr"}}');var l=n(4848),t=n(8453);const a={sidebar_label:"AIRS - Artificial Immune Recognition System",sidebar_position:1,keywords:["Binary","classifying","affinity threshold","Real-Valued","classifying","anomalies","K-Nearest Neighbors"],lastUpdatedAt:"2025/05/25",author:"Jo\xe3o Paulo"},r="AIRS - Artificial Immune Recognition System",c={},h=[{value:"AIRS Constructor:",id:"airs-constructor",level:2},{value:"Public Methods",id:"public-methods",level:2},{value:"Function fit(...)",id:"function-fit",level:3},{value:"Function predict(...)",id:"function-predict",level:3},{value:"Function score(...):",id:"function-score",level:3},{value:"Private Methods",id:"private-methods",level:2},{value:"Function _refinement_arb(...):",id:"function-_refinement_arb",level:3},{value:"Function _cells_affinity_threshold(...):",id:"function-_cells_affinity_threshold",level:3},{value:"Function _affinity(...):",id:"function-_affinity",level:3},{value:"Function _init_memory_c(...):",id:"function-_init_memory_c",level:3},{value:"1",id:"1",level:5}];function d(s){const e={a:"a",admonition:"admonition",annotation:"annotation",blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h5:"h5",header:"header",hr:"hr",li:"li",math:"math",mfrac:"mfrac",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msub:"msub",mtext:"mtext",munderover:"munderover",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,t.R)(),...s.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"airs---artificial-immune-recognition-system",children:"AIRS - Artificial Immune Recognition System"})}),"\n",(0,l.jsxs)(e.p,{children:["The ",(0,l.jsx)(e.code,{children:"AIRS"})," class aims to perform classification using metaphors of selection and clonal expansion."]}),"\n",(0,l.jsx)(e.p,{children:"This implementation is inspired by AIRS2, a simplified version of the original AIRS algorithm.\nIntroducing adaptations to handle continuous and binary datasets."}),"\n",(0,l.jsxs)(e.p,{children:["Based on Algorithm 16.5 from Brabazon et al. ",(0,l.jsx)(e.a,{href:"#1",children:"1"}),"."]}),"\n",(0,l.jsx)(e.admonition,{title:"Related and noteworthy works:",type:"tip",children:(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.a,{href:"https://github.com/AghilesAzzoug/Artificial-Immune-System",children:"Artificial Immune Recognition System V2 - AZZOUG Aghiles"})}),"\n"]})}),"\n",(0,l.jsx)(e.admonition,{type:"info",children:(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:(0,l.jsx)(e.code,{children:"AIRS"})})," extends the ",(0,l.jsx)(e.strong,{children:(0,l.jsxs)(e.a,{href:"abr",children:[(0,l.jsx)(e.code,{children:"_ABR"})," class"]})}),", inheriting its base functionality."]})}),"\n",(0,l.jsx)(e.h2,{id:"airs-constructor",children:"AIRS Constructor:"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Attributes:"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"n_resources"})," (",(0,l.jsx)(e.code,{children:"float"}),"): Total amount of available resources. Defaults to 10."]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"rate_clonal"})," (",(0,l.jsx)(e.code,{children:"float"}),"): Maximum number of possible clones of a class. This quantity is multiplied by (cell stimulus * rate_hypermutation) to define the number of clones. Defaults to 10."]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"rate_hypermutation"})," (",(0,l.jsx)(e.code,{children:"int"}),"): The rate of mutated clones derived from rate_clonal as a scalar factor. Defaults to 0.75."]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"affinity_threshold_scalar"})," (",(0,l.jsx)(e.code,{children:"float"}),"): Normalized affinity threshold. Defaults to 0.75."]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"k"})," (",(0,l.jsx)(e.code,{children:"int"}),"): The number of K nearest neighbors that will be used to choose a label in the prediction. Defaults to 10."]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"max_iters"})," (",(0,l.jsx)(e.code,{children:"int"}),"): Maximum number of interactions in the refinement process of the ARB set exposed to a\u1d62. Defaults to 100."]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"resource_amplified"})," (",(0,l.jsx)(e.code,{children:"float"}),"): Resource consumption amplifier is multiplied with the incentive to subtract resources. Defaults to 1.0 without amplification."]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"metric"}),' (Literal["manhattan", "minkowski", "euclidean"]): Way to calculate the distance between the detector and the sample:']}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"'Euclidean'"})," \u279c The calculation of the distance is given by the expression:",(0,l.jsx)(e.br,{}),"\n","\u221a( (x\u2081 \u2013 x\u2082)\xb2 + (y\u2081 \u2013 y\u2082)\xb2 + ... + (yn \u2013 yn)\xb2)."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"'minkowski'"})," \u279c The calculation of the distance is given by the expression:",(0,l.jsx)(e.br,{}),"\n","( |X\u2081 \u2013 Y\u2081|p + |X\u2082 \u2013 Y\u2082|p + ... + |Xn \u2013 Yn|p) \xb9/\u209a."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"'manhattan'"})," \u279c The calculation of the distance is given by the expression:",(0,l.jsx)(e.br,{}),"\n","( |x\u2081 \u2013 x\u2082| + |y\u2081 \u2013 y\u2082| + ... + |yn \u2013 yn|).",(0,l.jsx)(e.br,{}),"\n",'Defaults to "Euclidean".']}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"algorithm"}),' (Literal["continuous-features", "binary-features"]):\nSpecifies the type of algorithm to use based on the nature of the input features:']}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"continuous-features"}),": selects an algorithm designed for continuous data, which should\nbe normalized within the range [0, 1]."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"binary-features"}),": selects an algorithm specialized for handling binary variables."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"seed"})," (int): Seed for the random generation of detector values. Defaults to None."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"**kwargs"}),":","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"p"})," (",(0,l.jsx)(e.code,{children:"float"}),"): This parameter stores the value of ",(0,l.jsx)(e.code,{children:"p"})," used in the Minkowski distance.\nThe default is ",(0,l.jsx)(e.code,{children:"2"}),", which means normalized Euclidean distance. Different values of p lead to different variants of the Minkowski distance. ",(0,l.jsx)(e.a,{href:"https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.distance.minkowski.html",children:"Learn more"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Other initialized variables:"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"cells_memory"})," (",(0,l.jsx)(e.code,{children:"dict"}),"): This variable stores a list of memory cells by class."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"affinity_threshold"})," (",(0,l.jsx)(e.code,{children:"dict"}),"): Defines the affinity threshold between antigens."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"classes"})," (",(0,l.jsx)(e.code,{children:"npt.NDArray"}),"): List of output classes."]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"public-methods",children:"Public Methods"}),"\n",(0,l.jsx)(e.h3,{id:"function-fit",children:"Function fit(...)"}),"\n",(0,l.jsxs)(e.p,{children:["The ",(0,l.jsx)(e.code,{children:"fit(...)"})," function generates detectors for the non-owners relative to the samples:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"def fit(self, X: npt.NDArray, y: npt.NDArray):\n"})}),"\n",(0,l.jsxs)(e.p,{children:["It performs the training according to ",(0,l.jsx)(e.code,{children:"X"})," and ",(0,l.jsx)(e.code,{children:"y"}),", using the method Artificial Immune Recognition System (",(0,l.jsx)(e.code,{children:"AIRS"}),")."]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Input parameters:"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"X"}),": Array with sample features, with ",(0,l.jsx)(e.strong,{children:"N"})," samples (rows) and ",(0,l.jsx)(e.strong,{children:"N"})," features (columns), normalized to values between [0, 1]."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"y"}),": Array with output classes corresponding to ",(0,l.jsx)(e.strong,{children:"N"})," samples related to ",(0,l.jsx)(e.code,{children:"X"}),"."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"verbose"}),": Boolean, default ",(0,l.jsx)(e.code,{children:"True"}),", determines if the feedback from the detector generation will be printed."]}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.em,{children:"Returns the class instance."})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h3,{id:"function-predict",children:"Function predict(...)"}),"\n",(0,l.jsxs)(e.p,{children:["The ",(0,l.jsx)(e.code,{children:"predict(...)"})," function performs class prediction using the generated detectors:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"def predict(self, X: npt.NDArray) -> npt.NDArray:\n"})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Input parameter:"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"X"}),": Array with the features for prediction, with ",(0,l.jsx)(e.strong,{children:"N"})," samples (rows) and ",(0,l.jsx)(e.strong,{children:"N"})," columns."]}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"C"}),": An array of predictions with the output classes for the given features."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"None"}),": If there are no detectors."]}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h3,{id:"function-score",children:"Function score(...):"}),"\n",(0,l.jsxs)(e.p,{children:["The ",(0,l.jsx)(e.code,{children:"score(...)"})," function calculates the accuracy of the trained model by making predictions and calculating the accuracy."]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"def score(self, X: npt.NDArray, y: list) -> float:\n"})}),"\n",(0,l.jsxs)(e.p,{children:["Returns accuracy as a ",(0,l.jsx)(e.code,{children:"float"}),"."]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"private-methods",children:"Private Methods"}),"\n",(0,l.jsx)(e.h3,{id:"function-_refinement_arb",children:"Function _refinement_arb(...):"}),"\n",(0,l.jsxs)(e.p,{children:['The function "_refinement_arb(...)" refines the ARB set until the average stimulation value exceeds the defined threshold (',(0,l.jsx)(e.code,{children:"affinity_threshold_scalar"}),")."]}),"\n",(0,l.jsx)(e.p,{children:"Parameters:"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"c_match"})," (",(0,l.jsx)(e.code,{children:"Cell"}),"): Cell with the highest stimulation relative to a\u1d62."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"arb_list"})," (",(0,l.jsx)(e.code,{children:"List[_ARB]"}),"): ARB set."]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"def _refinement_arb(self, ai: npt.NDArray, c_match: Cell, arb_list: List[_ARB]) -> _ARB:\n"})}),"\n",(0,l.jsx)(e.p,{children:"Returns the cell (_ARB) with the highest ARB stimulation."}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h3,{id:"function-_cells_affinity_threshold",children:"Function _cells_affinity_threshold(...):"}),"\n",(0,l.jsxs)(e.p,{children:['The function "_cells_affinity_threshold(...)" calculates the affinity threshold based on the average affinity between training instances, where a\u1d62 and a\u2c7c are a pair of antigens, and affinity is measured by distance (Euclidean, Manhattan, Minkowski, Hamming).',(0,l.jsx)(e.br,{}),"\n",(0,l.jsx)(e.strong,{children:"Following the formula:"})]}),"\n",(0,l.jsx)(e.span,{className:"katex-display",children:(0,l.jsxs)(e.span,{className:"katex",children:[(0,l.jsx)(e.span,{className:"katex-mathml",children:(0,l.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block",children:(0,l.jsxs)(e.semantics,{children:[(0,l.jsxs)(e.mrow,{children:[(0,l.jsxs)(e.msub,{children:[(0,l.jsx)(e.mtext,{children:"affinity"}),(0,l.jsx)(e.mtext,{children:"threshold"})]}),(0,l.jsx)(e.mo,{children:"="}),(0,l.jsxs)(e.mfrac,{children:[(0,l.jsxs)(e.mrow,{children:[(0,l.jsxs)(e.munderover,{children:[(0,l.jsx)(e.mo,{children:"\u2211"}),(0,l.jsxs)(e.mrow,{children:[(0,l.jsx)(e.mi,{children:"i"}),(0,l.jsx)(e.mo,{children:"="}),(0,l.jsx)(e.mn,{children:"1"})]}),(0,l.jsxs)(e.mrow,{children:[(0,l.jsx)(e.mi,{children:"n"}),(0,l.jsx)(e.mo,{children:"\u2212"}),(0,l.jsx)(e.mn,{children:"1"})]})]}),(0,l.jsxs)(e.munderover,{children:[(0,l.jsx)(e.mo,{children:"\u2211"}),(0,l.jsxs)(e.mrow,{children:[(0,l.jsx)(e.mi,{children:"j"}),(0,l.jsx)(e.mo,{children:"="}),(0,l.jsx)(e.mi,{children:"i"}),(0,l.jsx)(e.mo,{children:"+"}),(0,l.jsx)(e.mn,{children:"1"})]}),(0,l.jsx)(e.mi,{children:"n"})]}),(0,l.jsx)(e.mtext,{children:"affinity"}),(0,l.jsx)(e.mo,{stretchy:"false",children:"("}),(0,l.jsxs)(e.msub,{children:[(0,l.jsx)(e.mi,{children:"a"}),(0,l.jsx)(e.mi,{children:"i"})]}),(0,l.jsx)(e.mo,{separator:"true",children:","}),(0,l.jsxs)(e.msub,{children:[(0,l.jsx)(e.mi,{children:"a"}),(0,l.jsx)(e.mi,{children:"j"})]}),(0,l.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,l.jsxs)(e.mrow,{children:[(0,l.jsx)(e.mi,{children:"n"}),(0,l.jsx)(e.mo,{stretchy:"false",children:"("}),(0,l.jsx)(e.mi,{children:"n"}),(0,l.jsx)(e.mo,{children:"\u2212"}),(0,l.jsx)(e.mn,{children:"1"}),(0,l.jsx)(e.mo,{stretchy:"false",children:")"}),(0,l.jsx)(e.mi,{mathvariant:"normal",children:"/"}),(0,l.jsx)(e.mn,{children:"2"})]})]})]}),(0,l.jsx)(e.annotation,{encoding:"application/x-tex",children:"\\text{affinity}_{\\text{threshold}} = \\frac{\n\\sum_{i=1}^{n-1} \\sum_{j=i+1}^{n} \\text{affinity}(a_i, a_j)}{n(n-1)/2}"})]})})}),(0,l.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,l.jsxs)(e.span,{className:"base",children:[(0,l.jsx)(e.span,{className:"strut",style:{height:"0.9386em",verticalAlign:"-0.2441em"}}),(0,l.jsxs)(e.span,{className:"mord",children:[(0,l.jsx)(e.span,{className:"mord text",children:(0,l.jsx)(e.span,{className:"mord",children:"affinity"})}),(0,l.jsx)(e.span,{className:"msupsub",children:(0,l.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,l.jsxs)(e.span,{className:"vlist-r",children:[(0,l.jsx)(e.span,{className:"vlist",style:{height:"0.242em"},children:(0,l.jsxs)(e.span,{style:{top:"-2.4559em",marginRight:"0.05em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,l.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,l.jsx)(e.span,{className:"mord mtight",children:(0,l.jsx)(e.span,{className:"mord text mtight",children:(0,l.jsx)(e.span,{className:"mord mtight",children:"threshold"})})})})]})}),(0,l.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,l.jsx)(e.span,{className:"vlist-r",children:(0,l.jsx)(e.span,{className:"vlist",style:{height:"0.2441em"},children:(0,l.jsx)(e.span,{})})})]})})]}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,l.jsx)(e.span,{className:"mrel",children:"="}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,l.jsxs)(e.span,{className:"base",children:[(0,l.jsx)(e.span,{className:"strut",style:{height:"2.7158em",verticalAlign:"-0.936em"}}),(0,l.jsxs)(e.span,{className:"mord",children:[(0,l.jsx)(e.span,{className:"mopen nulldelimiter"}),(0,l.jsx)(e.span,{className:"mfrac",children:(0,l.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,l.jsxs)(e.span,{className:"vlist-r",children:[(0,l.jsxs)(e.span,{className:"vlist",style:{height:"1.7798em"},children:[(0,l.jsxs)(e.span,{style:{top:"-2.314em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsxs)(e.span,{className:"mord",children:[(0,l.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,l.jsx)(e.span,{className:"mopen",children:"("}),(0,l.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,l.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,l.jsx)(e.span,{className:"mord",children:"1"}),(0,l.jsx)(e.span,{className:"mclose",children:")"}),(0,l.jsx)(e.span,{className:"mord",children:"/2"})]})]}),(0,l.jsxs)(e.span,{style:{top:"-3.23em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsx)(e.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,l.jsxs)(e.span,{style:{top:"-3.8258em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsxs)(e.span,{className:"mord",children:[(0,l.jsxs)(e.span,{className:"mop",children:[(0,l.jsx)(e.span,{className:"mop op-symbol small-op",style:{position:"relative",top:"0em"},children:"\u2211"}),(0,l.jsx)(e.span,{className:"msupsub",children:(0,l.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,l.jsxs)(e.span,{className:"vlist-r",children:[(0,l.jsxs)(e.span,{className:"vlist",style:{height:"0.954em"},children:[(0,l.jsxs)(e.span,{style:{top:"-2.4003em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,l.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,l.jsxs)(e.span,{className:"mord mtight",children:[(0,l.jsx)(e.span,{className:"mord mathnormal mtight",children:"i"}),(0,l.jsx)(e.span,{className:"mrel mtight",children:"="}),(0,l.jsx)(e.span,{className:"mord mtight",children:"1"})]})})]}),(0,l.jsxs)(e.span,{style:{top:"-3.2029em",marginRight:"0.05em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,l.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,l.jsxs)(e.span,{className:"mord mtight",children:[(0,l.jsx)(e.span,{className:"mord mathnormal mtight",children:"n"}),(0,l.jsx)(e.span,{className:"mbin mtight",children:"\u2212"}),(0,l.jsx)(e.span,{className:"mord mtight",children:"1"})]})})]})]}),(0,l.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,l.jsx)(e.span,{className:"vlist-r",children:(0,l.jsx)(e.span,{className:"vlist",style:{height:"0.2997em"},children:(0,l.jsx)(e.span,{})})})]})})]}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,l.jsxs)(e.span,{className:"mop",children:[(0,l.jsx)(e.span,{className:"mop op-symbol small-op",style:{position:"relative",top:"0em"},children:"\u2211"}),(0,l.jsx)(e.span,{className:"msupsub",children:(0,l.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,l.jsxs)(e.span,{className:"vlist-r",children:[(0,l.jsxs)(e.span,{className:"vlist",style:{height:"0.8043em"},children:[(0,l.jsxs)(e.span,{style:{top:"-2.4003em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,l.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,l.jsxs)(e.span,{className:"mord mtight",children:[(0,l.jsx)(e.span,{className:"mord mathnormal mtight",style:{marginRight:"0.05724em"},children:"j"}),(0,l.jsx)(e.span,{className:"mrel mtight",children:"="}),(0,l.jsx)(e.span,{className:"mord mathnormal mtight",children:"i"}),(0,l.jsx)(e.span,{className:"mbin mtight",children:"+"}),(0,l.jsx)(e.span,{className:"mord mtight",children:"1"})]})})]}),(0,l.jsxs)(e.span,{style:{top:"-3.2029em",marginRight:"0.05em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,l.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,l.jsx)(e.span,{className:"mord mtight",children:(0,l.jsx)(e.span,{className:"mord mathnormal mtight",children:"n"})})})]})]}),(0,l.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,l.jsx)(e.span,{className:"vlist-r",children:(0,l.jsx)(e.span,{className:"vlist",style:{height:"0.4358em"},children:(0,l.jsx)(e.span,{})})})]})})]}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,l.jsx)(e.span,{className:"mord text",children:(0,l.jsx)(e.span,{className:"mord",children:"affinity"})}),(0,l.jsx)(e.span,{className:"mopen",children:"("}),(0,l.jsxs)(e.span,{className:"mord",children:[(0,l.jsx)(e.span,{className:"mord mathnormal",children:"a"}),(0,l.jsx)(e.span,{className:"msupsub",children:(0,l.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,l.jsxs)(e.span,{className:"vlist-r",children:[(0,l.jsx)(e.span,{className:"vlist",style:{height:"0.3117em"},children:(0,l.jsxs)(e.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,l.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,l.jsx)(e.span,{className:"mord mathnormal mtight",children:"i"})})]})}),(0,l.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,l.jsx)(e.span,{className:"vlist-r",children:(0,l.jsx)(e.span,{className:"vlist",style:{height:"0.15em"},children:(0,l.jsx)(e.span,{})})})]})})]}),(0,l.jsx)(e.span,{className:"mpunct",children:","}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,l.jsxs)(e.span,{className:"mord",children:[(0,l.jsx)(e.span,{className:"mord mathnormal",children:"a"}),(0,l.jsx)(e.span,{className:"msupsub",children:(0,l.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,l.jsxs)(e.span,{className:"vlist-r",children:[(0,l.jsx)(e.span,{className:"vlist",style:{height:"0.3117em"},children:(0,l.jsxs)(e.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,l.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,l.jsx)(e.span,{className:"mord mathnormal mtight",style:{marginRight:"0.05724em"},children:"j"})})]})}),(0,l.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,l.jsx)(e.span,{className:"vlist-r",children:(0,l.jsx)(e.span,{className:"vlist",style:{height:"0.2861em"},children:(0,l.jsx)(e.span,{})})})]})})]}),(0,l.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),(0,l.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,l.jsx)(e.span,{className:"vlist-r",children:(0,l.jsx)(e.span,{className:"vlist",style:{height:"0.936em"},children:(0,l.jsx)(e.span,{})})})]})}),(0,l.jsx)(e.span,{className:"mclose nulldelimiter"})]})]})]})]})}),"\n",(0,l.jsx)(e.p,{children:"Parameters:"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"antigens_list"})," (",(0,l.jsx)(e.code,{children:"NDArray"}),"): List of training antigens."]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"def _cells_affinity_threshold(self, antigens_list: npt.NDArray):\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h3,{id:"function-_affinity",children:"Function _affinity(...):"}),"\n",(0,l.jsx)(e.p,{children:'The function "_affinity(...)" calculates the stimulus between two vectors using metrics.'}),"\n",(0,l.jsx)(e.p,{children:"Parameters:"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"u"})," (",(0,l.jsx)(e.code,{children:"npt.NDArray"}),"): Coordinates of the first point."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"v"})," (",(0,l.jsx)(e.code,{children:"npt.NDArray"}),"): Coordinates of the second point."]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"def _affinity(self, u: npt.NDArray, v: npt.NDArray) -> float:\n"})}),"\n",(0,l.jsx)(e.p,{children:"Returns the stimulus rate between the vectors."}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h3,{id:"function-_init_memory_c",children:"Function _init_memory_c(...):"}),"\n",(0,l.jsxs)(e.p,{children:['The function "_init_memory_c(...)" initializes memory cells by randomly selecting ',(0,l.jsx)(e.code,{children:"n_antigens_selected"})," from the list of training antigens."]}),"\n",(0,l.jsx)(e.p,{children:"Parameters:"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"antigens_list"})," (",(0,l.jsx)(e.code,{children:"NDArray"}),"): List of training antigens."]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"def _init_memory_c(self, antigens_list: npt.NDArray) -> List[Cell]:\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h1,{id:"references",children:"References"}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h5,{id:"1",children:"1"}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsxs)(e.p,{children:["BRABAZON, Anthony; O\u2019NEILL, Michael; MCGARRAGHY, Se\xe1n. Natural Computing Algorithms. [S. l.]: Springer Berlin Heidelberg, 2015. DOI 10.1007/978-3-662-43631-8. Dispon\xedvel em: ",(0,l.jsx)(e.a,{href:"http://dx.doi.org/10.1007/978-3-662-43631-8",children:"http://dx.doi.org/10.1007/978-3-662-43631-8"}),"."]}),"\n"]})]})}function o(s={}){const{wrapper:e}={...(0,t.R)(),...s.components};return e?(0,l.jsx)(e,{...s,children:(0,l.jsx)(d,{...s})}):d(s)}},8453:(s,e,n)=>{n.d(e,{R:()=>a,x:()=>r});var i=n(6540);const l={},t=i.createContext(l);function a(s){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof s?s(e):{...e,...s}}),[e,s])}function r(s){let e;return e=s.disableParentContext?"function"==typeof s.components?s.components(l):s.components||l:a(s.components),i.createElement(t.Provider,{value:e},s.children)}}}]);